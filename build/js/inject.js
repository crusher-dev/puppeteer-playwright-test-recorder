!function(n){var t={};function e(I){if(t[I])return t[I].exports;var g=t[I]={i:I,l:!1,exports:{}};return n[I].call(g.exports,g,g.exports,e),g.l=!0,g.exports}e.m=n,e.c=t,e.d=function(n,t,I){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:I})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var I=Object.create(null);if(e.r(I),Object.defineProperty(I,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var g in n)e.d(I,g,function(t){return n[t]}.bind(null,g));return I},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=14)}([,function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.Chrome = chrome;\nexports.Window = window;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy91dGlscy90eXBlcy50cz85ZDUyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1pZ25vcmVcbmV4cG9ydCBjb25zdCBDaHJvbWUgPSBjaHJvbWU7XG5leHBvcnQgY29uc3QgV2luZG93ID0gd2luZG93O1xuIl0sIm1hcHBpbmdzIjoiOzs7OztBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.EVENT_CAPTURED = \'EVENT_CAPTURED\';\nexports.START_RECORDING_SESSION = "START_RECORDING_SESSION";\nexports.DELETE_RECORDING_SESSION = "STOP_RECORDING_SESSION";\nexports.SAVE_EVENT = \'SAVE_EVENT\';\nexports.GET_EVENTS = "GET_EVENTS";\nexports.CHECK_SESSION_STATUS = "CHECK_SESSION_STATUS";\nexports.STOP_RECORDING = "STOP_RECORDING";\nexports.GET_CODE = "GET_CODE";\nexports.DEFAULT_VALIDATION_SCRIPT = "function(html, text, element) {\\n    return text.toLowerCase();\\n}";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb25zdGFudHMudHM/ODVlZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgRVZFTlRfQ0FQVFVSRUQgPSAnRVZFTlRfQ0FQVFVSRUQnO1xuXG5cbi8vIEFjdGlvbnNcbmV4cG9ydCBjb25zdCBTVEFSVF9SRUNPUkRJTkdfU0VTU0lPTiA9IFwiU1RBUlRfUkVDT1JESU5HX1NFU1NJT05cIjtcbmV4cG9ydCBjb25zdCBERUxFVEVfUkVDT1JESU5HX1NFU1NJT04gPSBcIlNUT1BfUkVDT1JESU5HX1NFU1NJT05cIjtcbmV4cG9ydCBjb25zdCBTQVZFX0VWRU5UID0gJ1NBVkVfRVZFTlQnO1xuZXhwb3J0IGNvbnN0IEdFVF9FVkVOVFMgPSBcIkdFVF9FVkVOVFNcIjtcbmV4cG9ydCBjb25zdCBDSEVDS19TRVNTSU9OX1NUQVRVUyA9IFwiQ0hFQ0tfU0VTU0lPTl9TVEFUVVNcIjtcbmV4cG9ydCBjb25zdCBTVE9QX1JFQ09SRElORyA9IFwiU1RPUF9SRUNPUkRJTkdcIjtcbmV4cG9ydCBjb25zdCBHRVRfQ09ERSA9IFwiR0VUX0NPREVcIjtcblxuXG4vLyBTY3JpcHRzXG5leHBvcnQgY29uc3QgREVGQVVMVF9WQUxJREFUSU9OX1NDUklQVCA9IGBmdW5jdGlvbihodG1sLCB0ZXh0LCBlbGVtZW50KSB7XG4gICAgcmV0dXJuIHRleHQudG9Mb3dlckNhc2UoKTtcbn1gXG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n')},function(module,exports,__webpack_require__){eval("/* global __webpack_public_path__ __HOST__ __PORT__ */\n\n/* eslint no-global-assign: 0 camelcase: 0 */\nif (true) {\n  __webpack_require__.p = chrome.extension.getURL('/');\n} else { var path; }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3dlYnBhY2svY3VzdG9tUHVibGljUGF0aC5qcz9jOGUzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyBfX0hPU1RfXyBfX1BPUlRfXyAqL1xuLyogZXNsaW50IG5vLWdsb2JhbC1hc3NpZ246IDAgY2FtZWxjYXNlOiAwICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIF9fd2VicGFja19wdWJsaWNfcGF0aF9fID0gY2hyb21lLmV4dGVuc2lvbi5nZXRVUkwoJy8nKTtcbn0gZWxzZSB7XG4gIC8vIEluIGRldmVsb3BtZW50IG1vZGUsXG4gIC8vIHRoZSBpZnJhbWUgb2YgaW5qZWN0cGFnZSBjYW5ub3QgZ2V0IGNvcnJlY3QgcGF0aCxcbiAgLy8gaXQgbmVlZCB0byBnZXQgcGFyZW50IHBhZ2UgcHJvdG9jb2wuXG4gIGNvbnN0IHBhdGggPSBgLy8ke19fSE9TVF9ffToke19fUE9SVF9ffS9qcy9gO1xuICBpZiAobG9jYXRpb24ucHJvdG9jb2wgPT09ICdodHRwczonIHx8IGxvY2F0aW9uLnNlYXJjaC5pbmRleE9mKCdwcm90b2NvbD1odHRwcycpICE9PSAtMSkge1xuICAgIF9fd2VicGFja19wdWJsaWNfcGF0aF9fID0gYGh0dHBzOiR7cGF0aH1gO1xuICB9IGVsc2Uge1xuICAgIF9fd2VicGFja19wdWJsaWNfcGF0aF9fID0gYGh0dHA6JHtwYXRofWA7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar types_1 = __webpack_require__(1);\n\nfunction loadScript(name, tabId, cb) {\n  return new Promise(function (resolve, reject) {\n    if (true) {\n      types_1.Chrome.tabs.executeScript(tabId, {\n        file: "/js/" + name + ".js",\n        runAt: \'document_end\'\n      }, function () {\n        resolve(true);\n\n        if (cb) {\n          cb();\n        }\n      });\n    } else {}\n  });\n}\n\nexports.loadScript = loadScript;\n\nfunction loadAssetScript(path, tabId) {\n  return new Promise(function (resolve, reject) {\n    types_1.Chrome.tabschrome.tabs.executeScript(null, {\n      file: "codemirror.js"\n    }, function () {\n      resolve(true);\n    });\n  });\n}\n\nexports.loadAssetScript = loadAssetScript;\n\nfunction getHTMLContentOfTemplate(template, cb) {\n  fetch(types_1.Chrome.runtime.getURL(template + ".html")).then(function (res) {\n    return res.text();\n  }).then(function (res) {\n    if (cb) {\n      cb(res);\n    }\n  });\n}\n\nexports.getHTMLContentOfTemplate = getHTMLContentOfTemplate;\n\nfunction getActiveTabId() {\n  return new Promise(function (resolve, reject) {\n    types_1.Chrome.tabs.query({\n      active: true,\n      currentWindow: true\n    }, function (tabs) {\n      resolve(tabs[0].id);\n    });\n  });\n}\n\nexports.getActiveTabId = getActiveTabId;\n\nfunction sendPostDataWithForm(url, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var form = document.createElement(\'form\');\n  form.method = "post";\n  form.action = url;\n  form.target = "_blank";\n  var optionKeys = Object.keys(options);\n\n  for (var _i = 0, optionKeys_1 = optionKeys; _i < optionKeys_1.length; _i++) {\n    var optionKey = optionKeys_1[_i];\n    var hiddenField = document.createElement(\'input\');\n    hiddenField.type = \'hidden\';\n    hiddenField.name = optionKey;\n    hiddenField.value = options[optionKey];\n    form.appendChild(hiddenField);\n  }\n\n  document.body.appendChild(form);\n  form.submit();\n  form.remove();\n}\n\nexports.sendPostDataWithForm = sendPostDataWithForm;\n\nfunction changeExtensionIcon(icon) {\n  types_1.Chrome.browserAction.setIcon({\n    path: icon\n  });\n}\n\nexports.changeExtensionIcon = changeExtensionIcon;\n\nfunction getSentenceCaseString(str) {\n  return str[0].toUpperCase() + str.slice(1).toLowerCase();\n}\n\nexports.getSentenceCaseString = getSentenceCaseString;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy91dGlscy9oZWxwZXJzLnRzPzI4ZjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hyb21lIH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2FkU2NyaXB0KG5hbWU6IHN0cmluZywgdGFiSWQ6IGFueSwgY2I6IGFueSkge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBDaHJvbWUudGFicy5leGVjdXRlU2NyaXB0KHRhYklkLCB7IGZpbGU6IGAvanMvJHtuYW1lfS5qc2AsIHJ1bkF0OiAnZG9jdW1lbnRfZW5kJyB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJlc29sdmUodHJ1ZSk7XG4gICAgICAgIGlmKGNiKSB7XG4gICAgICAgICAgY2IoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGRldjogYXN5bmMgZmV0Y2ggYnVuZGxlXG4gICAgICBmZXRjaChgaHR0cDovL2xvY2FsaG9zdDozMDAwL2pzLyR7bmFtZX0uanNgKVxuICAgICAgICAgIC50aGVuKChyZXMpID0+IHJlcy50ZXh0KCkpXG4gICAgICAgICAgLnRoZW4oKGZldGNoUmVzKSA9PiB7XG4gICAgICAgICAgICBDaHJvbWUudGFicy5leGVjdXRlU2NyaXB0KHRhYklkLCB7IGNvZGU6IGZldGNoUmVzLCBydW5BdDogJ2RvY3VtZW50X2VuZCcgfSwgZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgcmVzb2x2ZSh0cnVlKTtcbiAgICAgICAgICAgICAgaWYoY2IpIHtcbiAgICAgICAgICAgICAgICBjYigpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9KTtcbiAgICB9XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbG9hZEFzc2V0U2NyaXB0KHBhdGg6IHN0cmluZywgdGFiSWQ6IGFueSl7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KT0+IHtcbiAgICBDaHJvbWUudGFic2Nocm9tZS50YWJzLmV4ZWN1dGVTY3JpcHQobnVsbCwgeyBmaWxlOiBcImNvZGVtaXJyb3IuanNcIiB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgcmVzb2x2ZSh0cnVlKTtcbiAgICB9KTtcbn0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0SFRNTENvbnRlbnRPZlRlbXBsYXRlKHRlbXBsYXRlOiBzdHJpbmcsIGNiOmFueSkge1xuICBmZXRjaChDaHJvbWUucnVudGltZS5nZXRVUkwoYCR7dGVtcGxhdGV9Lmh0bWxgKSlcbiAgICAudGhlbigocmVzKSA9PiByZXMudGV4dCgpKVxuICAgIC50aGVuKChyZXMpID0+IHsgaWYoY2IpIHsgY2IocmVzKTt9IH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0QWN0aXZlVGFiSWQoKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgQ2hyb21lLnRhYnMucXVlcnkoe2FjdGl2ZTogdHJ1ZSwgY3VycmVudFdpbmRvdzogdHJ1ZX0sICh0YWJzOiBhbnkpID0+IHtcbiAgICAgIHJlc29sdmUodGFic1swXS5pZCk7XG4gICAgfSk7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2VuZFBvc3REYXRhV2l0aEZvcm0odXJsOiBzdHJpbmcsIG9wdGlvbnM6IGFueSA9IHt9KXtcbiAgY29uc3QgZm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvcm0nKTtcbiAgZm9ybS5tZXRob2QgPSBcInBvc3RcIjtcbiAgZm9ybS5hY3Rpb24gPSB1cmw7XG4gIGZvcm0udGFyZ2V0ID0gXCJfYmxhbmtcIjtcbiAgY29uc3Qgb3B0aW9uS2V5cyA9IE9iamVjdC5rZXlzKG9wdGlvbnMpO1xuICBmb3IobGV0IG9wdGlvbktleSBvZiBvcHRpb25LZXlzKXtcbiAgICBjb25zdCBoaWRkZW5GaWVsZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgaGlkZGVuRmllbGQudHlwZSA9ICdoaWRkZW4nO1xuICAgIGhpZGRlbkZpZWxkLm5hbWUgPSBvcHRpb25LZXk7XG4gICAgaGlkZGVuRmllbGQudmFsdWUgPSBvcHRpb25zW29wdGlvbktleV07XG5cbiAgICBmb3JtLmFwcGVuZENoaWxkKGhpZGRlbkZpZWxkKTtcbiAgfVxuXG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZm9ybSk7XG4gIGZvcm0uc3VibWl0KCk7XG4gIGZvcm0ucmVtb3ZlKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjaGFuZ2VFeHRlbnNpb25JY29uKGljb246IHN0cmluZyl7XG4gICAgQ2hyb21lLmJyb3dzZXJBY3Rpb24uc2V0SWNvbih7cGF0aDppY29ufSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTZW50ZW5jZUNhc2VTdHJpbmcoc3RyOiBzdHJpbmcpe1xuICByZXR1cm4gc3RyWzBdLnRvVXBwZXJDYXNlKCkrc3RyLnNsaWNlKDEpLnRvTG93ZXJDYXNlKCk7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBWUE7QUFDQTtBQUNBO0FBQ0E7QUF4QkE7QUFDQTtBQXdCQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVBBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUxBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUEE7QUFDQTtBQU9BO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBbkJBO0FBQ0E7QUFtQkE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBSEE7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBSEEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.NAVIGATE_URL = \'NAVIGATE_URL\';\nexports.CLICK = "CLICK";\nexports.INPUT = "INPUT";\nexports.HOVER = "HOVER";\nexports.SCROLL_TO_VIEW = "SCROLL_TO_VIEW";\nexports.ASSERT_TEXT = "ASSERT_TEXT";\nexports.EXTRACT_INFO = "EXTRACT_INFO";\nexports.SCREENSHOT = "SCREENSHOT";\nexports.BLACKOUT = "BLACKOUT";\nexports.WAIT = "WAIT";\nexports.PAGE_SCREENSHOT = "PAGE_SCREENSHOT";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb25zdGFudHMvRE9NRXZlbnRzVG9SZWNvcmQudHM/NDE4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgTkFWSUdBVEVfVVJMID0gJ05BVklHQVRFX1VSTCc7XG5leHBvcnQgY29uc3QgQ0xJQ0sgPSBcIkNMSUNLXCI7XG5leHBvcnQgY29uc3QgSU5QVVQgPSBcIklOUFVUXCI7XG5leHBvcnQgY29uc3QgSE9WRVIgPSBcIkhPVkVSXCI7XG5leHBvcnQgY29uc3QgU0NST0xMX1RPX1ZJRVcgPVwiU0NST0xMX1RPX1ZJRVdcIjtcbmV4cG9ydCBjb25zdCBBU1NFUlRfVEVYVD1cIkFTU0VSVF9URVhUXCI7XG5leHBvcnQgY29uc3QgRVhUUkFDVF9JTkZPID0gXCJFWFRSQUNUX0lORk9cIjtcbmV4cG9ydCBjb25zdCBTQ1JFRU5TSE9UID0gXCJTQ1JFRU5TSE9UXCI7XG5leHBvcnQgY29uc3QgQkxBQ0tPVVQgPSBcIkJMQUNLT1VUXCI7XG5leHBvcnQgY29uc3QgV0FJVCA9IFwiV0FJVFwiO1xuZXhwb3J0IGNvbnN0IFBBR0VfU0NSRUVOU0hPVCA9IFwiUEFHRV9TQ1JFRU5TSE9UXCI7XG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar types_1 = __webpack_require__(1);\n\nvar constants_1 = __webpack_require__(2);\n\nfunction sendMessageToBackground(payload, callback) {\n  if (callback === void 0) {\n    callback = null;\n  }\n\n  types_1.Chrome.runtime.sendMessage(payload, function (response) {\n    if (callback) {\n      callback(response);\n    }\n  });\n}\n\nexports.sendMessageToBackground = sendMessageToBackground;\n\nfunction sendMessageToPage(payload, callback) {\n  if (callback === void 0) {\n    callback = null;\n  }\n\n  types_1.Chrome.tabs.query({\n    active: true,\n    currentWindow: true\n  }, function (tabs) {\n    types_1.Chrome.tabs.sendMessage(tabs[0].id, payload, function (response) {\n      if (callback) {\n        callback(response);\n      }\n    });\n  });\n}\n\nexports.sendMessageToPage = sendMessageToPage;\n\nfunction getEventsList(tabId) {\n  if (tabId === void 0) {\n    tabId = undefined;\n  }\n\n  return new Promise(function (resolve, reject) {\n    sendMessageToBackground({\n      type: constants_1.GET_EVENTS,\n      payload: {\n        tabId: tabId\n      }\n    }, function (events) {\n      if (!events) {\n        reject("Something went wrong!! Failed to get events from background script.");\n      }\n\n      resolve(events);\n    });\n  });\n}\n\nexports.getEventsList = getEventsList;\n\nfunction getSessionStatus(tabId) {\n  return new Promise(function (resolve, reject) {\n    sendMessageToBackground({\n      type: constants_1.CHECK_SESSION_STATUS,\n      payload: {\n        tabId: tabId\n      }\n    }, function (res) {\n      resolve(res && res.isSessionGoingOn);\n    });\n  });\n}\n\nexports.getSessionStatus = getSessionStatus;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy91dGlscy9tZXNzYWdlVXRpbC50cz8yYzFjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENocm9tZSB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IHtDSEVDS19TRVNTSU9OX1NUQVRVUywgR0VUX0VWRU5UU30gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gc2VuZE1lc3NhZ2VUb0JhY2tncm91bmQocGF5bG9hZDogYW55LCBjYWxsYmFjazogYW55ID0gbnVsbCkge1xuICBDaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZShwYXlsb2FkLCAocmVzcG9uc2U6IGFueSkgPT4ge1xuICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgY2FsbGJhY2socmVzcG9uc2UpO1xuICAgIH1cbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZW5kTWVzc2FnZVRvUGFnZShwYXlsb2FkOiBhbnksIGNhbGxiYWNrOiBhbnkgPSBudWxsKSB7XG4gIENocm9tZS50YWJzLnF1ZXJ5KHsgYWN0aXZlOiB0cnVlLCBjdXJyZW50V2luZG93OiB0cnVlIH0sICh0YWJzOiBhbnkpID0+IHtcbiAgICBDaHJvbWUudGFicy5zZW5kTWVzc2FnZSh0YWJzWzBdLmlkLCBwYXlsb2FkLCAocmVzcG9uc2U6IGFueSkgPT4ge1xuICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgIGNhbGxiYWNrKHJlc3BvbnNlKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRFdmVudHNMaXN0KHRhYklkOiBhbnkgPSB1bmRlZmluZWQpe1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIHNlbmRNZXNzYWdlVG9CYWNrZ3JvdW5kKHt0eXBlOiBHRVRfRVZFTlRTLCBwYXlsb2FkOiB7dGFiSWQ6IHRhYklkfX0sIChldmVudHM6IGFueSk9PntcbiAgICAgIGlmKCFldmVudHMpe1xuICAgICAgICByZWplY3QoXCJTb21ldGhpbmcgd2VudCB3cm9uZyEhIEZhaWxlZCB0byBnZXQgZXZlbnRzIGZyb20gYmFja2dyb3VuZCBzY3JpcHQuXCIpO1xuICAgICAgfVxuICAgICAgcmVzb2x2ZShldmVudHMpO1xuICAgIH0pO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFNlc3Npb25TdGF0dXModGFiSWQ6IGFueSl7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgc2VuZE1lc3NhZ2VUb0JhY2tncm91bmQoe3R5cGU6IENIRUNLX1NFU1NJT05fU1RBVFVTLCBwYXlsb2FkOiB7dGFiSWQ6IHRhYklkfX0sIChyZXM6IGFueSk9PiB7XG4gICAgICByZXNvbHZlKHJlcyAmJiByZXMuaXNTZXNzaW9uR29pbmdPbik7XG4gICAgfSk7XG4gIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVBBO0FBQ0E7QUFPQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBVEE7QUFDQTtBQVNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVZBO0FBQ0E7QUFVQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVBBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nfunction loadContentInBody(content) {\n  document.body.insertAdjacentHTML(\'beforeend\', content);\n}\n\nexports.loadContentInBody = loadContentInBody;\n;\n\nfunction removeAllTargetBlankFromLinks() {\n  var links = document.links,\n      i,\n      length;\n\n  for (i = 0, length = links.length; i < length; i++) {\n    links[i].target == \'_blank\' && links[i].removeAttribute(\'target\');\n  }\n}\n\nexports.removeAllTargetBlankFromLinks = removeAllTargetBlankFromLinks;\n\nfunction startSession() {\n  window.sessionStarted = true;\n}\n\nexports.startSession = startSession;\n\nfunction stopSession() {\n  window.sessionStarted = false;\n}\n\nexports.stopSession = stopSession;\n\nfunction isSessionGoingOn() {\n  return !!window.sessionStarted;\n}\n\nexports.isSessionGoingOn = isSessionGoingOn;\n\nfunction loadCSSIfNotAlreadyLoadedForSomeReason(href) {\n  var ss = document.styleSheets;\n\n  for (var i = 0, max = ss.length; i < max; i++) {\n    if (ss[i].href == "/path/to.css") return;\n  }\n\n  var link = document.createElement("link");\n  link.rel = "stylesheet";\n  link.href = href;\n  link.id = "overlay_css";\n  document.getElementsByTagName("head")[0].appendChild(link);\n}\n\nexports.loadCSSIfNotAlreadyLoadedForSomeReason = loadCSSIfNotAlreadyLoadedForSomeReason;\n\nfunction setAttributeForAllChildNodes(parent, attributeKey, attributeValue) {\n  return __spreadArrays(parent.children).map(function (children) {\n    children.setAttribute(attributeKey, attributeValue);\n  });\n}\n\nexports.setAttributeForAllChildNodes = setAttributeForAllChildNodes;\n\nfunction hideAllChildNodes(parent) {\n  return setAttributeForAllChildNodes(parent, "data-gone", "true");\n}\n\nexports.hideAllChildNodes = hideAllChildNodes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy91dGlscy9kb20udHM/MjM0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gbG9hZENvbnRlbnRJbkJvZHkoY29udGVudDogc3RyaW5nKSB7XG4gIC8vIEB0cy1pZ25vcmVcbiAgZG9jdW1lbnQuYm9keS5pbnNlcnRBZGphY2VudEhUTUwoICdiZWZvcmVlbmQnLCBjb250ZW50ICk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlQWxsVGFyZ2V0QmxhbmtGcm9tTGlua3MoKXtcbiAgbGV0IGxpbmtzID0gZG9jdW1lbnQubGlua3MsIGksIGxlbmd0aDtcblxuICBmb3IgKGkgPSAwLCBsZW5ndGggPSBsaW5rcy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgIGxpbmtzW2ldLnRhcmdldCA9PSAnX2JsYW5rJyAmJiBsaW5rc1tpXS5yZW1vdmVBdHRyaWJ1dGUoJ3RhcmdldCcpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdGFydFNlc3Npb24oKXtcbiAgLy8gQHRzLWlnbm9yZVxuICB3aW5kb3cuc2Vzc2lvblN0YXJ0ZWQgPSB0cnVlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RvcFNlc3Npb24oKXtcbiAgLy8gQHRzLWlnbm9yZVxuICB3aW5kb3cuc2Vzc2lvblN0YXJ0ZWQgPSBmYWxzZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzU2Vzc2lvbkdvaW5nT24oKXtcbiAgLy8gQHRzLWlnbm9yZVxuICByZXR1cm4gISF3aW5kb3cuc2Vzc2lvblN0YXJ0ZWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2FkQ1NTSWZOb3RBbHJlYWR5TG9hZGVkRm9yU29tZVJlYXNvbiAoaHJlZjogYW55KSB7XG4gIGxldCBzcyA9IGRvY3VtZW50LnN0eWxlU2hlZXRzO1xuICBmb3IgKGxldCBpID0gMCwgbWF4ID0gc3MubGVuZ3RoOyBpIDwgbWF4OyBpKyspIHtcbiAgICBpZiAoc3NbaV0uaHJlZiA9PSBcIi9wYXRoL3RvLmNzc1wiKVxuICAgICAgcmV0dXJuO1xuICB9XG4gIGxldCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XG4gIGxpbmsucmVsID0gXCJzdHlsZXNoZWV0XCI7XG4gIGxpbmsuaHJlZiA9IGhyZWY7XG4gIGxpbmsuaWQ9XCJvdmVybGF5X2Nzc1wiO1xuXG4gIGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaGVhZFwiKVswXS5hcHBlbmRDaGlsZChsaW5rKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldEF0dHJpYnV0ZUZvckFsbENoaWxkTm9kZXMocGFyZW50OiBhbnksIGF0dHJpYnV0ZUtleTogc3RyaW5nLCBhdHRyaWJ1dGVWYWx1ZTogc3RyaW5nKXtcbiAgcmV0dXJuIFsuLi5wYXJlbnQuY2hpbGRyZW5dLm1hcCgoY2hpbGRyZW46IGFueSk9PntcbiAgICBjaGlsZHJlbi5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlS2V5LCBhdHRyaWJ1dGVWYWx1ZSk7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaGlkZUFsbENoaWxkTm9kZXMocGFyZW50OiBhbnkpe1xuICAgIHJldHVybiBzZXRBdHRyaWJ1dGVGb3JBbGxDaGlsZE5vZGVzKHBhcmVudCwgXCJkYXRhLWdvbmVcIiwgXCJ0cnVlXCIpO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBRUE7QUFDQTtBQUNBO0FBSkE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFQQTtBQUNBO0FBT0E7QUFFQTtBQUNBO0FBQ0E7QUFKQTtBQUNBO0FBSUE7QUFFQTtBQUNBO0FBQ0E7QUFKQTtBQUNBO0FBSUE7QUFFQTtBQUNBO0FBQ0E7QUFKQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQWJBO0FBQ0E7QUFhQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFMQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFIQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar DOMEventsToRecord_1 = __webpack_require__(5);\n\nvar importPlayWright = "const playwright = require(\'playwright\');\\n\\n";\nvar header = "const browser = await playwright[\\"chrome\\"].launch();\\nconst page = await context.newPage();\\n";\nvar footer = "await browser.close();\\n";\nvar wrappedHeader = "(async () => {\\n  const browser = await playwright[\\"chromium\\"].launch();\\n  const page = await browser.newPage();\\n";\nvar wrappedFooter = "  await browser.close()\\n})()\\n";\nvar extractInfoUsingScriptFunction = "async function extractInfoUsingScript(page, selector, validationScript){\\n    const elHandle = await page.$(selector);\\n    const escapedInnerHTML = (await elHandle.innerHTML())" + \'.toString().replace(/\\\\`/g, "\\\\\\\\`").trim()\' + ";\\n    const escapedInnerText = (await elHandle.innerText())" + \'.replace(/\\\\`/g, "\\\\\\\\`").trim();\' + ";\\n    \\n    " + "const scriptToEvaluate = \\`(\\` + validationScript + \\`)(\\` + \'\\`\' + escapedInnerHTML + \'\\`\' + \\`, \\` + \'\\`\' + \\`${escapedInnerText}\\` + \'\\`\' + \\`, elHandle)\\`" + ";\\n    const output = eval(scriptToEvaluate);\\n    \\n    return output;\\n}\\n\\n";\n\nvar CodeGenerator = function () {\n  function CodeGenerator(options) {\n    this.helperFunctionsToInclude = {};\n  }\n\n  CodeGenerator.prototype.generate = function (events) {\n    var generatedEventsCode = this._handleEvents(events);\n\n    return importPlayWright + this.addHelperFunctionsIfAny() + wrappedHeader + generatedEventsCode + wrappedFooter;\n  };\n\n  CodeGenerator.prototype.addHelperFunctionsIfAny = function () {\n    var helperFunctions = Object.keys(this.helperFunctionsToInclude);\n    var codeToAdd = "";\n\n    for (var _i = 0, helperFunctions_1 = helperFunctions; _i < helperFunctions_1.length; _i++) {\n      var fun = helperFunctions_1[_i];\n\n      if (fun === DOMEventsToRecord_1.EXTRACT_INFO) {\n        codeToAdd += extractInfoUsingScriptFunction;\n      }\n    }\n\n    return codeToAdd;\n  };\n\n  CodeGenerator.prototype._handleEvents = function (events) {\n    var screenShotFileName;\n    var code = \'\\n\';\n\n    for (var i = 0; i < events.length; i++) {\n      var _a = events[i],\n          event_type = _a.event_type,\n          selector = _a.selector,\n          value = _a.value;\n\n      switch (event_type) {\n        case DOMEventsToRecord_1.NAVIGATE_URL:\n          code += "  await page.goto(\'" + value + "\');\\n";\n          break;\n\n        case DOMEventsToRecord_1.CLICK:\n          code += "  await page.click(\'" + selector + "\');\\n";\n          break;\n\n        case DOMEventsToRecord_1.HOVER:\n          code += "  await page.hover(\'" + selector + "\');\\n";\n          break;\n\n        case DOMEventsToRecord_1.SCREENSHOT:\n          screenShotFileName = selector.replace(/[^\\w\\s]/gi, \'\').replace(/ /g, \'_\') + ("_" + i);\n          code += "  const h_" + i + " =  await page.$(\'" + selector + "\');\\n   h_" + i + ".screenshot({path: \'" + screenShotFileName + ".png\'});\\n";\n          break;\n\n        case DOMEventsToRecord_1.PAGE_SCREENSHOT:\n          screenShotFileName = value.replace(/[^\\w\\s]/gi, \'\').replace(/ /g, "_") + ("_" + i);\n          code += "  await page.screenshot({path: \'" + screenShotFileName + ".png\'});\\n";\n          break;\n\n        case DOMEventsToRecord_1.SCROLL_TO_VIEW:\n          code += "  const stv_" + i + " =  await page.$(\'" + selector + "\');\\n  stv_" + i + ".scrollIntoViewIfNeeded();\\n";\n          break;\n\n        case DOMEventsToRecord_1.INPUT:\n          code += "  await page.type(\'" + selector + "\', \'" + value + "\');\\n";\n          break;\n\n        case DOMEventsToRecord_1.EXTRACT_INFO:\n          var variable_name = Object.keys(value)[0];\n          var validation_script = value[variable_name];\n          this.helperFunctionsToInclude[DOMEventsToRecord_1.EXTRACT_INFO] = true;\n          code += "  let " + variable_name + " = await extractInfoUsingScript(page, \'" + selector + "\', " + \'`\' + validation_script + \'`\' + ")\\n";\n          break;\n\n        case DOMEventsToRecord_1.ASSERT_TEXT:\n          this.helperFunctionsToInclude[DOMEventsToRecord_1.ASSERT_TEXT] = true;\n          code += " ";\n\n        default:\n          console.error("Not supported event");\n      }\n    }\n\n    return code;\n  };\n\n  return CodeGenerator;\n}();\n\nexports["default"] = CodeGenerator;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9zY3JpcHRzL2NvZGUtZ2VuZXJhdG9yLnRzPzcwYmIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcblxuaW1wb3J0IHtcbiAgICBBU1NFUlRfVEVYVCxcbiAgICBDTElDSywgRVhUUkFDVF9JTkZPLFxuICAgIEhPVkVSLFxuICAgIElOUFVULFxuICAgIE5BVklHQVRFX1VSTCxcbiAgICBQQUdFX1NDUkVFTlNIT1QsXG4gICAgU0NSRUVOU0hPVCxcbiAgICBTQ1JPTExfVE9fVklFV1xufSBmcm9tIFwiLi4vY29uc3RhbnRzL0RPTUV2ZW50c1RvUmVjb3JkXCI7XG5cbmNvbnN0IGltcG9ydFBsYXlXcmlnaHQgPSBgY29uc3QgcGxheXdyaWdodCA9IHJlcXVpcmUoJ3BsYXl3cmlnaHQnKTtcXG5cXG5gXG5cbmNvbnN0IGhlYWRlciA9IGBjb25zdCBicm93c2VyID0gYXdhaXQgcGxheXdyaWdodFtcImNocm9tZVwiXS5sYXVuY2goKTtcbmNvbnN0IHBhZ2UgPSBhd2FpdCBjb250ZXh0Lm5ld1BhZ2UoKTtcXG5gXG5cbmNvbnN0IGZvb3RlciA9IGBhd2FpdCBicm93c2VyLmNsb3NlKCk7XFxuYFxuXG5jb25zdCB3cmFwcGVkSGVhZGVyID0gYChhc3luYyAoKSA9PiB7XG4gIGNvbnN0IGJyb3dzZXIgPSBhd2FpdCBwbGF5d3JpZ2h0W1wiY2hyb21pdW1cIl0ubGF1bmNoKCk7XG4gIGNvbnN0IHBhZ2UgPSBhd2FpdCBicm93c2VyLm5ld1BhZ2UoKTtcXG5gXG5cbmNvbnN0IHdyYXBwZWRGb290ZXIgPSBgICBhd2FpdCBicm93c2VyLmNsb3NlKClcbn0pKClcXG5gO1xuXG5cbmNvbnN0IGV4dHJhY3RJbmZvVXNpbmdTY3JpcHRGdW5jdGlvbiA9IGBhc3luYyBmdW5jdGlvbiBleHRyYWN0SW5mb1VzaW5nU2NyaXB0KHBhZ2UsIHNlbGVjdG9yLCB2YWxpZGF0aW9uU2NyaXB0KXtcbiAgICBjb25zdCBlbEhhbmRsZSA9IGF3YWl0IHBhZ2UuJChzZWxlY3Rvcik7XG4gICAgY29uc3QgZXNjYXBlZElubmVySFRNTCA9IChhd2FpdCBlbEhhbmRsZS5pbm5lckhUTUwoKSlgICsgJy50b1N0cmluZygpLnJlcGxhY2UoL1xcXFxgL2csIFwiXFxcXFxcXFxgXCIpLnRyaW0oKScgKyBgO1xuICAgIGNvbnN0IGVzY2FwZWRJbm5lclRleHQgPSAoYXdhaXQgZWxIYW5kbGUuaW5uZXJUZXh0KCkpYCArICcucmVwbGFjZSgvXFxcXGAvZywgXCJcXFxcXFxcXGBcIikudHJpbSgpOycgKyBgO1xuICAgIFxuICAgIGArIFwiY29uc3Qgc2NyaXB0VG9FdmFsdWF0ZSA9IFxcYChcXGAgKyB2YWxpZGF0aW9uU2NyaXB0ICsgXFxgKShcXGAgKyAnXFxgJyArIGVzY2FwZWRJbm5lckhUTUwgKyAnXFxgJyArIFxcYCwgXFxgICsgJ1xcYCcgKyBcXGAke2VzY2FwZWRJbm5lclRleHR9XFxgICsgJ1xcYCcgKyBcXGAsIGVsSGFuZGxlKVxcYFwiICsgYDtcbiAgICBjb25zdCBvdXRwdXQgPSBldmFsKHNjcmlwdFRvRXZhbHVhdGUpO1xuICAgIFxuICAgIHJldHVybiBvdXRwdXQ7XG59XFxuXFxuYDtcblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb2RlR2VuZXJhdG9yIHtcbiAgICBoZWxwZXJGdW5jdGlvbnNUb0luY2x1ZGU6IGFueTtcblxuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnM6IGFueSkge1xuICAgICAgICB0aGlzLmhlbHBlckZ1bmN0aW9uc1RvSW5jbHVkZSA9IHt9O1xuICAgIH1cblxuICAgIGdlbmVyYXRlKGV2ZW50cyl7XG4gICAgICAgIGNvbnN0IGdlbmVyYXRlZEV2ZW50c0NvZGUgPSB0aGlzLl9oYW5kbGVFdmVudHMoZXZlbnRzKTtcbiAgICAgICAgcmV0dXJuIGltcG9ydFBsYXlXcmlnaHQgKyB0aGlzLmFkZEhlbHBlckZ1bmN0aW9uc0lmQW55KCkgKyB3cmFwcGVkSGVhZGVyICsgZ2VuZXJhdGVkRXZlbnRzQ29kZSArIHdyYXBwZWRGb290ZXI7XG4gICAgfVxuXG4gICAgYWRkSGVscGVyRnVuY3Rpb25zSWZBbnkoKXtcbiAgICAgICAgY29uc3QgaGVscGVyRnVuY3Rpb25zID0gT2JqZWN0LmtleXModGhpcy5oZWxwZXJGdW5jdGlvbnNUb0luY2x1ZGUpO1xuICAgICAgICBsZXQgY29kZVRvQWRkID0gXCJcIjtcbiAgICAgICAgZm9yKGxldCBmdW4gb2YgaGVscGVyRnVuY3Rpb25zKXtcbiAgICAgICAgICAgIGlmKGZ1biA9PT0gRVhUUkFDVF9JTkZPKXtcbiAgICAgICAgICAgICAgICBjb2RlVG9BZGQrPSBleHRyYWN0SW5mb1VzaW5nU2NyaXB0RnVuY3Rpb247XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNvZGVUb0FkZDtcbiAgICB9XG5cbiAgICBfaGFuZGxlRXZlbnRzKGV2ZW50czogYW55KXtcbiAgICAgICAgbGV0IHNjcmVlblNob3RGaWxlTmFtZTogc3RyaW5nO1xuICAgICAgICBsZXQgY29kZSA9ICdcXG4nO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGV2ZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgeyBldmVudF90eXBlLCBzZWxlY3RvciwgdmFsdWUgfSA9IGV2ZW50c1tpXTtcbiAgICAgICAgICAgIHN3aXRjaCAoZXZlbnRfdHlwZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgTkFWSUdBVEVfVVJMOlxuICAgICAgICAgICAgICAgICAgICBjb2RlICs9IGAgIGF3YWl0IHBhZ2UuZ290bygnJHt2YWx1ZX0nKTtcXG5gO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIENMSUNLOlxuICAgICAgICAgICAgICAgICAgICBjb2RlICs9IGAgIGF3YWl0IHBhZ2UuY2xpY2soJyR7c2VsZWN0b3J9Jyk7XFxuYDtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBIT1ZFUjpcbiAgICAgICAgICAgICAgICAgICAgY29kZSArPSBgICBhd2FpdCBwYWdlLmhvdmVyKCcke3NlbGVjdG9yfScpO1xcbmA7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgU0NSRUVOU0hPVDpcbiAgICAgICAgICAgICAgICAgICAgc2NyZWVuU2hvdEZpbGVOYW1lID0gc2VsZWN0b3IucmVwbGFjZSgvW15cXHdcXHNdL2dpLCAnJykucmVwbGFjZSgvIC9nLCAnXycpICsgYF8ke2l9YDtcbiAgICAgICAgICAgICAgICAgICAgY29kZSArPSBgICBjb25zdCBoXyR7aX0gPSAgYXdhaXQgcGFnZS4kKCcke3NlbGVjdG9yfScpO1xcbiAgIGhfJHtpfS5zY3JlZW5zaG90KHtwYXRoOiAnJHtzY3JlZW5TaG90RmlsZU5hbWV9LnBuZyd9KTtcXG5gXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgUEFHRV9TQ1JFRU5TSE9UOlxuICAgICAgICAgICAgICAgICAgICBzY3JlZW5TaG90RmlsZU5hbWUgPSB2YWx1ZS5yZXBsYWNlKC9bXlxcd1xcc10vZ2ksICcnKS5yZXBsYWNlKC8gL2csXCJfXCIpICsgYF8ke2l9YDtcbiAgICAgICAgICAgICAgICAgICAgY29kZSArPSBgICBhd2FpdCBwYWdlLnNjcmVlbnNob3Qoe3BhdGg6ICcke3NjcmVlblNob3RGaWxlTmFtZX0ucG5nJ30pO1xcbmA7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgU0NST0xMX1RPX1ZJRVc6XG4gICAgICAgICAgICAgICAgICAgIGNvZGUgKz0gYCAgY29uc3Qgc3R2XyR7aX0gPSAgYXdhaXQgcGFnZS4kKCcke3NlbGVjdG9yfScpO1xcbiAgc3R2XyR7aX0uc2Nyb2xsSW50b1ZpZXdJZk5lZWRlZCgpO1xcbmBcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBJTlBVVDpcbiAgICAgICAgICAgICAgICAgICAgY29kZSArPSBgICBhd2FpdCBwYWdlLnR5cGUoJyR7c2VsZWN0b3J9JywgJyR7dmFsdWV9Jyk7XFxuYDtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBFWFRSQUNUX0lORk86XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhcmlhYmxlX25hbWUgPSBPYmplY3Qua2V5cyh2YWx1ZSlbMF07XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbGlkYXRpb25fc2NyaXB0ID0gdmFsdWVbdmFyaWFibGVfbmFtZV07XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGVscGVyRnVuY3Rpb25zVG9JbmNsdWRlW0VYVFJBQ1RfSU5GT10gPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBjb2RlICs9IGAgIGxldCAke3ZhcmlhYmxlX25hbWV9ID0gYXdhaXQgZXh0cmFjdEluZm9Vc2luZ1NjcmlwdChwYWdlLCAnJHtzZWxlY3Rvcn0nLCBgICsgJ2AnICsgdmFsaWRhdGlvbl9zY3JpcHQgKyAnYCcgKyBgKVxcbmA7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgQVNTRVJUX1RFWFQ6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGVscGVyRnVuY3Rpb25zVG9JbmNsdWRlW0FTU0VSVF9URVhUXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGNvZGUgKz0gYCBgO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJOb3Qgc3VwcG9ydGVkIGV2ZW50XCIpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNvZGU7XG4gICAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFFQTtBQUNBO0FBVUE7QUFFQTtBQUdBO0FBRUE7QUFJQTtBQUlBO0FBQ0E7QUFXQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBbENBO0FBcUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8\n')},,,,,,function(n,t,e){e(3),n.exports=e(15)},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar dom_1 = __webpack_require__(7);\n\nvar helpers_1 = __webpack_require__(4);\n\nvar types_1 = __webpack_require__(1);\n\nvar UIController_1 = __webpack_require__(16);\n\nfunction initContentScript() {\n  if (dom_1.isSessionGoingOn()) {\n    console.log('Already loaded, returning early');\n    return;\n  }\n\n  dom_1.startSession();\n  helpers_1.getHTMLContentOfTemplate('overlay', function (res) {\n    dom_1.loadContentInBody(\"\" + res);\n    dom_1.loadCSSIfNotAlreadyLoadedForSomeReason(types_1.Chrome.runtime.getURL('styles/overlay.css'));\n    new UIController_1[\"default\"]().boot();\n  });\n}\n\ninitContentScript();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5qZWN0LnRzPzhhZmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtpc1Nlc3Npb25Hb2luZ09uLCBsb2FkQ29udGVudEluQm9keSwgbG9hZENTU0lmTm90QWxyZWFkeUxvYWRlZEZvclNvbWVSZWFzb24sIHN0YXJ0U2Vzc2lvbn0gZnJvbSAnLi91dGlscy9kb20nO1xuaW1wb3J0IHtnZXRBY3RpdmVUYWJJZCwgZ2V0SFRNTENvbnRlbnRPZlRlbXBsYXRlLCBsb2FkU2NyaXB0fSBmcm9tICcuL3V0aWxzL2hlbHBlcnMnO1xuaW1wb3J0IHsgQ2hyb21lIH0gZnJvbSAnLi91dGlscy90eXBlcyc7XG5pbXBvcnQgVUlDb250cm9sbGVyIGZyb20gJy4vc2NyaXB0cy9pbmplY3QvVUlDb250cm9sbGVyJztcblxuZnVuY3Rpb24gaW5pdENvbnRlbnRTY3JpcHQoKSB7XG4gIC8vIEB0cy1pZ25vcmVcbiAgaWYgKGlzU2Vzc2lvbkdvaW5nT24oKSkge1xuICAgIGNvbnNvbGUubG9nKCdBbHJlYWR5IGxvYWRlZCwgcmV0dXJuaW5nIGVhcmx5Jyk7XG4gICAgcmV0dXJuO1xuICB9XG4gIHN0YXJ0U2Vzc2lvbigpO1xuICAvLyBAdHMtaWdub3JlXG4gIGdldEhUTUxDb250ZW50T2ZUZW1wbGF0ZSgnb3ZlcmxheScsIChyZXMpID0+IHtcbiAgICAgIGxvYWRDb250ZW50SW5Cb2R5KGAke3Jlc31gKTtcblxuICAgICAgbG9hZENTU0lmTm90QWxyZWFkeUxvYWRlZEZvclNvbWVSZWFzb24oQ2hyb21lLnJ1bnRpbWUuZ2V0VVJMKCdzdHlsZXMvb3ZlcmxheS5jc3MnKSk7XG4gICAgICAobmV3IFVJQ29udHJvbGxlcigpKS5ib290KCk7XG4gIH0pO1xufVxuXG5pbml0Q29udGVudFNjcmlwdCgpO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///15\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar recordingOverlay_1 = __webpack_require__(17);\n\nvar constants_1 = __webpack_require__(2);\n\nvar types_1 = __webpack_require__(1);\n\nvar messageUtil_1 = __webpack_require__(6);\n\nvar dom_1 = __webpack_require__(7);\n\nvar helpers_1 = __webpack_require__(4);\n\nvar code_generator_1 = __webpack_require__(8);\n\nvar UIControllerExtends = function () {\n  function UIControllerExtends(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.defaultState = {\n      showingOnboardingOverlay: false,\n      sessionGoingOn: false\n    };\n    var showingOnboardingOverlay = options.showingOnboardingOverlay,\n        sessionGoingOn = options.sessionGoingOn;\n    this.state = __assign(__assign({}, this.defaultState), {\n      showingOnboardingOverlay: showingOnboardingOverlay,\n      sessionGoingOn: sessionGoingOn\n    });\n    this.recordingOverlay = new recordingOverlay_1["default"](this, {});\n  }\n\n  UIControllerExtends.prototype.boot = function () {\n    this.registerEvents();\n    this.startRecording();\n  };\n\n  UIControllerExtends.prototype.registerEvents = function () {\n    types_1.Chrome.runtime.onMessage.addListener(this.handleIncomingMessages.bind(this));\n  };\n\n  UIControllerExtends.prototype.handleIncomingMessages = function (request, sender, sendResponse) {\n    var type = request.type;\n\n    switch (type) {\n      case constants_1.STOP_RECORDING:\n        this.stopRecording();\n        break;\n\n      case constants_1.GET_CODE:\n        var events = request.events;\n        helpers_1.sendPostDataWithForm("http://localhost:7000/app/editor", {\n          actions: events\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    sendResponse(true);\n  };\n\n  UIControllerExtends.prototype.startRecording = function () {\n    console.debug("Starting recording actions");\n    var sessionGoingOn = this.state.sessionGoingOn;\n    messageUtil_1.sendMessageToBackground({\n      type: constants_1.START_RECORDING_SESSION\n    }, function (res) {\n      console.log("Sent" + res);\n    });\n\n    if (sessionGoingOn) {\n      console.warn("Can\'t start new recording session until current session has finished");\n      return;\n    }\n\n    this.recordingOverlay.boot();\n  };\n\n  UIControllerExtends.prototype.getCodeForEvents = function () {\n    messageUtil_1.getEventsList().then(function (events) {\n      var _generator = new code_generator_1["default"]({});\n\n      helpers_1.sendPostDataWithForm("http://localhost:7000/app/editor", {\n        actions: events\n      });\n      window.close();\n    });\n  };\n\n  UIControllerExtends.prototype.stopRecording = function () {\n    console.debug("Stopping recording actions");\n    dom_1.stopSession();\n    this.recordingOverlay.shutDown();\n\n    var _overlayCss = document.querySelector("#overlay_css");\n\n    if (_overlayCss) {\n      _overlayCss.remove();\n    }\n\n    window.location.reload();\n  };\n\n  return UIControllerExtends;\n}();\n\nexports["default"] = UIControllerExtends;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9pbmplY3QvVUlDb250cm9sbGVyLnRzPzUwZDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlY29yZGluZ092ZXJsYXkgZnJvbSBcIi4vdWkvcmVjb3JkaW5nT3ZlcmxheVwiO1xuaW1wb3J0IHtcbiAgICBTVEFSVF9SRUNPUkRJTkdfU0VTU0lPTixcbiAgICBTVE9QX1JFQ09SRElORyxcbiAgICBHRVRfQ09ERVxufSBmcm9tIFwiLi4vLi4vY29uc3RhbnRzXCI7XG5pbXBvcnQge0Nocm9tZX0gZnJvbSBcIi4uLy4uL3V0aWxzL3R5cGVzXCI7XG5pbXBvcnQge2dldEV2ZW50c0xpc3QsIHNlbmRNZXNzYWdlVG9CYWNrZ3JvdW5kLCBzZW5kTWVzc2FnZVRvUGFnZX0gZnJvbSBcIi4uLy4uL3V0aWxzL21lc3NhZ2VVdGlsXCI7XG5pbXBvcnQge3N0b3BTZXNzaW9ufSBmcm9tIFwiLi4vLi4vdXRpbHMvZG9tXCI7XG5pbXBvcnQge3NlbmRQb3N0RGF0YVdpdGhGb3JtfSBmcm9tIFwiLi4vLi4vdXRpbHMvaGVscGVyc1wiO1xuaW1wb3J0IENvZGVHZW5lcmF0b3IgZnJvbSBcIi4uL2NvZGUtZ2VuZXJhdG9yXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVJQ29udHJvbGxlckV4dGVuZHN7XG4gICAgc3RhdGU6IGFueTtcbiAgICBkZWZhdWx0U3RhdGU6IGFueSA9IHtzaG93aW5nT25ib2FyZGluZ092ZXJsYXk6IGZhbHNlLCBzZXNzaW9uR29pbmdPbjogZmFsc2V9O1xuICAgIHJlY29yZGluZ092ZXJsYXk6IFJlY29yZGluZ092ZXJsYXk7XG5cbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zID0ge30gYXMgYW55KSB7XG4gICAgICAgIGNvbnN0IHtzaG93aW5nT25ib2FyZGluZ092ZXJsYXksIHNlc3Npb25Hb2luZ09ufSA9IG9wdGlvbnM7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICAuLi50aGlzLmRlZmF1bHRTdGF0ZSxcbiAgICAgICAgICAgIHNob3dpbmdPbmJvYXJkaW5nT3ZlcmxheSxcbiAgICAgICAgICAgIHNlc3Npb25Hb2luZ09uXG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5yZWNvcmRpbmdPdmVybGF5ID0gbmV3IFJlY29yZGluZ092ZXJsYXkodGhpcywge30pO1xuICAgIH1cblxuICAgIGJvb3QoKXtcbiAgICAgICAgdGhpcy5yZWdpc3RlckV2ZW50cygpO1xuICAgICAgICB0aGlzLnN0YXJ0UmVjb3JkaW5nKCk7XG4gICAgfVxuXG4gICAgcmVnaXN0ZXJFdmVudHMoKXtcbiAgICAgICAgQ2hyb21lLnJ1bnRpbWUub25NZXNzYWdlLmFkZExpc3RlbmVyKHRoaXMuaGFuZGxlSW5jb21pbmdNZXNzYWdlcy5iaW5kKHRoaXMpKTtcbiAgICB9XG5cblxuICAgIGhhbmRsZUluY29taW5nTWVzc2FnZXMocmVxdWVzdDogYW55LCBzZW5kZXI6IGFueSwgc2VuZFJlc3BvbnNlOiBhbnkpe1xuICAgICAgICBjb25zdCB7dHlwZX0gPSByZXF1ZXN0O1xuICAgICAgICBzd2l0Y2godHlwZSl7XG4gICAgICAgICAgICBjYXNlIFNUT1BfUkVDT1JESU5HOlxuICAgICAgICAgICAgICAgIHRoaXMuc3RvcFJlY29yZGluZygpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBHRVRfQ09ERTpcbiAgICAgICAgICAgICAgICBjb25zdCB7ZXZlbnRzfSA9IHJlcXVlc3Q7XG4gICAgICAgICAgICAgICAgc2VuZFBvc3REYXRhV2l0aEZvcm0oXCJodHRwOi8vbG9jYWxob3N0OjcwMDAvYXBwL2VkaXRvclwiLCB7YWN0aW9uczogZXZlbnRzfSlcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgc2VuZFJlc3BvbnNlKHRydWUpO1xuICAgIH1cblxuICAgIHN0YXJ0UmVjb3JkaW5nKCl7XG4gICAgICAgIGNvbnNvbGUuZGVidWcoXCJTdGFydGluZyByZWNvcmRpbmcgYWN0aW9uc1wiKTtcbiAgICAgICAgY29uc3Qge3Nlc3Npb25Hb2luZ09ufSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIHNlbmRNZXNzYWdlVG9CYWNrZ3JvdW5kKHt0eXBlOiBTVEFSVF9SRUNPUkRJTkdfU0VTU0lPTn0sIGZ1bmN0aW9uIChyZXM6YW55KSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIlNlbnRcIiArIHJlcylcbiAgICAgICAgfSk7XG4gICAgICAgIGlmKHNlc3Npb25Hb2luZ09uKXtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihcIkNhbid0IHN0YXJ0IG5ldyByZWNvcmRpbmcgc2Vzc2lvbiB1bnRpbCBjdXJyZW50IHNlc3Npb24gaGFzIGZpbmlzaGVkXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5yZWNvcmRpbmdPdmVybGF5LmJvb3QoKTtcbiAgICB9XG5cbiAgICBnZXRDb2RlRm9yRXZlbnRzKCl7XG4gICAgICAgIGdldEV2ZW50c0xpc3QoKS50aGVuKChldmVudHMpPT57XG4gICAgICAgICAgICBjb25zdCBfZ2VuZXJhdG9yID0gbmV3IENvZGVHZW5lcmF0b3Ioe30pO1xuICAgICAgICAgICAgc2VuZFBvc3REYXRhV2l0aEZvcm0oXCJodHRwOi8vbG9jYWxob3N0OjcwMDAvYXBwL2VkaXRvclwiLCB7YWN0aW9uczogZXZlbnRzfSlcbiAgICAgICAgICAgIHdpbmRvdy5jbG9zZSgpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBzdG9wUmVjb3JkaW5nKCl7XG4gICAgICAgIGNvbnNvbGUuZGVidWcoXCJTdG9wcGluZyByZWNvcmRpbmcgYWN0aW9uc1wiKTtcbiAgICAgICAgc3RvcFNlc3Npb24oKTtcbiAgICAgICAgdGhpcy5yZWNvcmRpbmdPdmVybGF5LnNodXREb3duKCk7XG5cbiAgICAgICAgY29uc3QgX292ZXJsYXlDc3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI292ZXJsYXlfY3NzXCIpO1xuICAgICAgICBpZihfb3ZlcmxheUNzcyl7X292ZXJsYXlDc3MucmVtb3ZlKCk7fVxuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFJQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBS0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUpBO0FBQUE7QUFBQTtBQUFBO0FBSUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUZBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQVRBO0FBQ0E7QUFVQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///16\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar DOMEventsToRecord_1 = __webpack_require__(5);\n\nvar messageUtil_1 = __webpack_require__(6);\n\nvar constants_1 = __webpack_require__(2);\n\nvar dom_1 = __webpack_require__(7);\n\nvar EventsController_1 = __webpack_require__(18);\n\nvar formWizard_1 = __webpack_require__(22);\n\nvar createPopper = __webpack_require__(29).createPopper;\n\nvar RecordingOverlay = function () {\n  function RecordingOverlay(controller, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.defaultState = {\n      targetElement: null,\n      sessionGoingOn: false,\n      showingEventsBox: false,\n      pinned: false\n    };\n    this.state = __assign({}, this.defaultState);\n    this.controller = controller;\n    this.handleMouseOver = this.handleMouseOver.bind(this);\n    this.handleAddIconClick = this.handleAddIconClick.bind(this);\n    this.handleEventsGridClick = this.handleEventsGridClick.bind(this);\n    this.takePageScreenShot = this.takePageScreenShot.bind(this);\n    this.handleStopRecordingButtonClick = this.handleStopRecordingButtonClick.bind(this);\n    this.handleDocumentClick = this.handleDocumentClick.bind(this);\n    this.handleInputBlur = this.handleInputBlur.bind(this);\n    this.eventsController = new EventsController_1["default"](this);\n    this.formWizard = new formWizard_1["default"](this, this.eventsController);\n    this.toggleEventsBox = this.toggleEventsBox.bind(this);\n  }\n\n  RecordingOverlay.prototype.getState = function () {\n    return this.state;\n  };\n\n  RecordingOverlay.prototype.toggleEventsBox = function () {\n    if (this._overlayAddEventsContainer.style.display !== "block") {\n      this._arrowOnAddIcon.setAttribute(\'data-hide\', \'\');\n\n      this.showEventsList();\n    } else {\n      this.hideEventsList();\n    }\n  };\n\n  RecordingOverlay.prototype.showAddIcon = function (target) {\n    this.destroyAddTether();\n    this._addActionTether = createPopper(target, this._addActionElement, {\n      placement: \'right-start\',\n      modifiers: [{\n        name: \'flip\',\n        enabled: true\n      }, {\n        name: \'offset\',\n        options: {\n          offset: [-1, 0]\n        }\n      }, {\n        name: \'arrow\',\n        options: {\n          element: this._arrowOnAddIcon\n        }\n      }]\n    });\n    this._addActionElement.style.display = \'block\';\n  };\n\n  RecordingOverlay.prototype.showEventsList = function () {\n    console.debug("Showing events list", this._overlayAddEventsContainer);\n    this._overlayAddEventsContainer.style.display = \'block\';\n    this.state.pinned = true;\n    this._addActionElement.style.height = this._overlayAddEventsContainer.getBoundingClientRect().height + "px";\n    this.destoryEventsListTether();\n    this._eventsListTether = createPopper(this._addActionModal, this._overlayAddEventsContainer, {\n      placement: \'right-start\',\n      modifiers: [{\n        name: \'flip\',\n        enabled: true\n      }]\n    });\n  };\n\n  RecordingOverlay.prototype.hideEventsList = function () {\n    this._arrowOnAddIcon.removeAttribute(\'data-hide\');\n\n    this._overlayAddEventsContainer.style.display = \'none\';\n    this._addActionElement.style.height = "auto";\n    this.state.pinned = false;\n    dom_1.hideAllChildNodes(this._modalContentContainer);\n    this._modalHeading.innerHTML = "Select action";\n\n    this._overlayEventsGrid.removeAttribute("data-gone");\n\n    this.destoryEventsListTether();\n  };\n\n  RecordingOverlay.prototype.destroyAddTether = function () {\n    if (this._addActionTether) {\n      this._addActionTether.destroy();\n\n      this._addActionTether = null;\n    }\n  };\n\n  RecordingOverlay.prototype.destoryEventsListTether = function () {\n    if (this._eventsListTether) {\n      this._eventsListTether.destroy();\n\n      this._eventsListTether = null;\n    }\n  };\n\n  RecordingOverlay.prototype.initNodes = function () {\n    this._modalHeading = document.querySelector(".overlay_heading_container .overlay_heading");\n    this._addActionElement = document.querySelector(\'#overlay_add_action\');\n    this._addActionIcon = document.querySelector(\'#overlay_add\');\n    this._addActionModal = document.querySelector(\'#overlay_add_icon\');\n    this._closeActionIcon = document.querySelector(\'#overlay_add_events_container .overlay_close_icon\');\n    this._overlayAddEventsContainer = document.querySelector("#overlay_add_events_container");\n    this._overlayEventsGrid = document.querySelector("#events_grid");\n    this._pageActionsContainer = document.querySelector("#page_actions");\n    this._stopRecorderButton = document.querySelector("#page_actions #stop_recorder_button");\n    this._takeScreenShotButton = document.querySelector("#page_actions #fullpage_screenshot");\n    this._arrowOnAddIcon = document.querySelector(\'#popper_arrow\');\n    this._modalContentContainer = document.querySelector(".overlay_modal_content");\n  };\n\n  RecordingOverlay.prototype.updateEventTarget = function (target) {\n    this.state = __assign(__assign({}, this.state), {\n      targetElement: target\n    });\n    this.highlightNode(target);\n    this.showAddIcon(target);\n  };\n\n  RecordingOverlay.prototype.highlightNode = function (target) {\n    target.style.outlineStyle = \'solid\';\n    target.style.outlineColor = \'#EC2E6A\';\n    target.style.outlineWidth = \'1px\';\n  };\n\n  RecordingOverlay.prototype.removeHighLightFromNode = function (target) {\n    if (target) {\n      target.style.outlineStyle = \'none\';\n      target.style.outlineColor = \'none\';\n      target.style.outlineWidth = \'0px\';\n    }\n  };\n\n  RecordingOverlay.prototype.handleSelectedActionFromEventsList = function (event) {\n    var action = event.target.getAttribute("data-action");\n\n    switch (action) {\n      case DOMEventsToRecord_1.CLICK:\n        dom_1.removeAllTargetBlankFromLinks();\n        this.eventsController.saveCapturedEventInBackground(DOMEventsToRecord_1.CLICK, this.state.targetElement);\n        this.eventsController.simulateClickOnElement(this.state.targetElement);\n        break;\n\n      case DOMEventsToRecord_1.HOVER:\n        this.eventsController.simulateHoverOnElement(this.state.targetElement);\n        this.eventsController.saveCapturedEventInBackground(DOMEventsToRecord_1.HOVER, this.state.targetElement);\n        break;\n\n      case DOMEventsToRecord_1.SCREENSHOT:\n        this.eventsController.saveCapturedEventInBackground(DOMEventsToRecord_1.SCREENSHOT, this.state.targetElement);\n        break;\n\n      case DOMEventsToRecord_1.SCROLL_TO_VIEW:\n        this.eventsController.saveCapturedEventInBackground(DOMEventsToRecord_1.SCROLL_TO_VIEW, this.state.targetElement);\n        break;\n\n      case DOMEventsToRecord_1.EXTRACT_INFO:\n        return this.formWizard.boot(action);\n\n      case DOMEventsToRecord_1.ASSERT_TEXT:\n        return this.formWizard.boot(action);\n\n      default:\n        break;\n    }\n\n    this.toggleEventsBox();\n  };\n\n  RecordingOverlay.prototype.handleMouseOver = function (event) {\n    if (this._addActionElement.contains(event.target) || event.target.hasAttribute("data-recorder") || this.state.pinned) {\n      return event.preventDefault();\n    }\n\n    var targetElement = this.state.targetElement;\n\n    if (targetElement !== event.target) {\n      this.removeHighLightFromNode(targetElement);\n      this.hideEventsList();\n      this.updateEventTarget(event.target);\n    }\n  };\n\n  RecordingOverlay.prototype.handleAddIconClick = function () {\n    this.toggleEventsBox();\n  };\n\n  RecordingOverlay.prototype.handleEventsGridClick = function (event) {\n    this.handleSelectedActionFromEventsList(event);\n  };\n\n  RecordingOverlay.prototype.handleStopRecordingButtonClick = function (event) {\n    this.controller.getCodeForEvents();\n    messageUtil_1.sendMessageToBackground({\n      type: constants_1.DELETE_RECORDING_SESSION\n    });\n    this.controller.stopRecording();\n  };\n\n  RecordingOverlay.prototype.handleDocumentClick = function (event) {\n    var isRecorder = event.target.getAttribute(\'data-recorder\');\n\n    if (!isRecorder) {\n      this.state.pinned = false;\n      var target = event.target;\n\n      if (!event.simulatedEvent) {\n        this.eventsController.saveCapturedEventInBackground(DOMEventsToRecord_1.CLICK, event.target);\n      }\n    }\n  };\n\n  RecordingOverlay.prototype.handleInputBlur = function (event) {\n    var isRecorder = event.target.getAttribute(\'data-recorder\');\n\n    if (!isRecorder) {\n      var targetElement = event.target;\n\n      if ((targetElement.tagName === "INPUT" || targetElement.tagName === "TEXTAREA") && targetElement.value) {\n        this.eventsController.saveCapturedEventInBackground(DOMEventsToRecord_1.INPUT, event.target, targetElement.value);\n      }\n    }\n  };\n\n  RecordingOverlay.prototype.registerNodeListeners = function () {\n    document.body.addEventListener("mousemove", this.handleMouseOver, true);\n    document.body.addEventListener("blur", this.handleInputBlur, true);\n    document.addEventListener("click", this.handleDocumentClick, true);\n\n    this._addActionIcon.addEventListener("click", this.handleAddIconClick);\n\n    this._overlayEventsGrid.addEventListener("click", this.handleEventsGridClick, true);\n\n    this._closeActionIcon.addEventListener("click", this.toggleEventsBox, true);\n\n    this._takeScreenShotButton.addEventListener("click", this.takePageScreenShot);\n\n    this._stopRecorderButton.addEventListener("click", this.handleStopRecordingButtonClick);\n  };\n\n  RecordingOverlay.prototype.takePageScreenShot = function () {\n    this.eventsController.saveCapturedEventInBackground(DOMEventsToRecord_1.PAGE_SCREENSHOT, document.body, document.title);\n  };\n\n  RecordingOverlay.prototype.removeNodeListeners = function () {\n    document.body.removeEventListener("mousemove", this.handleMouseOver, true);\n\n    this._addActionIcon.removeEventListener("click", this.handleAddIconClick);\n\n    this._overlayEventsGrid.removeEventListener("click", this.handleEventsGridClick, true);\n\n    this._takeScreenShotButton.removeEventListener("click", this.takePageScreenShot);\n\n    this._stopRecorderButton.removeEventListener("click", this.handleStopRecordingButtonClick);\n  };\n\n  RecordingOverlay.prototype.boot = function () {\n    this.initNodes();\n    this.registerNodeListeners();\n    messageUtil_1.sendMessageToBackground({\n      type: constants_1.START_RECORDING_SESSION\n    }, function (res) {\n      console.log(res);\n    });\n    this.eventsController.saveCapturedEventInBackground(DOMEventsToRecord_1.NAVIGATE_URL, document.body, window.location.href);\n    console.info("Info Overlay booted up");\n  };\n\n  RecordingOverlay.prototype.removeNodes = function () {\n    if (this._addActionElement) {\n      this._addActionElement.remove();\n    }\n\n    if (this._pageActionsContainer) {\n      this._pageActionsContainer.remove();\n    }\n  };\n\n  RecordingOverlay.prototype.shutDown = function () {\n    var targetElement = this.state.targetElement;\n    console.debug("Shutting down Recording Overlay");\n    this.removeNodeListeners();\n\n    if (targetElement) {\n      this.removeHighLightFromNode(targetElement);\n    }\n\n    this.removeNodes();\n    this.state = __assign(__assign({}, this.state), {\n      sessionGoingOn: false\n    });\n  };\n\n  return RecordingOverlay;\n}();\n\nexports["default"] = RecordingOverlay;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///17\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar messageUtil_1 = __webpack_require__(6);\n\nvar constants_1 = __webpack_require__(2);\n\nvar toast_1 = __webpack_require__(19);\n\nvar helpers_1 = __webpack_require__(4);\n\nvar finder_1 = __webpack_require__(20);\n\nvar EventsController = function () {\n  function EventsController(recordingOverlay) {\n    this.recordingOverlay = recordingOverlay;\n  }\n\n  EventsController.prototype.simulateClickOnElement = function (element) {\n    try {\n      var event_1 = new MouseEvent("click", {\n        "view": window,\n        "bubbles": true,\n        "cancelable": false\n      });\n      event_1.simulatedEvent = true;\n      element.dispatchEvent(event_1);\n    } catch (err) {\n      console.error(element, err);\n      return;\n    }\n  };\n\n  EventsController.prototype.simulateHoverOnElement = function (el) {\n    try {\n      var event_2 = new Event(\'MS\');\n      event_2.initEvent("mouseover", true, true);\n      el.dispatchEvent(event_2);\n    } catch (err) {\n      console.error(el, err);\n      return;\n    }\n  };\n\n  EventsController.prototype.saveCapturedEventInBackground = function (event_type, capturedTarget, value, callback) {\n    if (value === void 0) {\n      value = "";\n    }\n\n    var optimizedMinLength = capturedTarget.id ? 2 : 10;\n    var selector = capturedTarget ? finder_1["default"](capturedTarget, {\n      seedMinLength: 5,\n      optimizedMinLength: optimizedMinLength\n    }) : null;\n    messageUtil_1.sendMessageToBackground({\n      type: constants_1.EVENT_CAPTURED,\n      payload: {\n        event_type: event_type,\n        selector: selector,\n        value: value ? value : null\n      }\n    }, function (res) {\n      toast_1.createSnackBar(helpers_1.getSentenceCaseString(event_type) + " action has been recorded", "Dismiss");\n\n      if (callback) {\n        callback();\n      }\n    });\n  };\n\n  return EventsController;\n}();\n\nexports["default"] = EventsController;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9pbmplY3QvRXZlbnRzQ29udHJvbGxlci50cz9mMmYyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7c2VuZE1lc3NhZ2VUb0JhY2tncm91bmR9IGZyb20gXCIuLi8uLi91dGlscy9tZXNzYWdlVXRpbFwiO1xuaW1wb3J0IHtFVkVOVF9DQVBUVVJFRH0gZnJvbSBcIi4uLy4uL2NvbnN0YW50c1wiO1xuaW1wb3J0IHtDTElDS30gZnJvbSBcIi4uLy4uL2NvbnN0YW50cy9ET01FdmVudHNUb1JlY29yZFwiO1xuaW1wb3J0IHtjcmVhdGVTbmFja0Jhcn0gZnJvbSBcIi4vdG9hc3RcIjtcbmltcG9ydCB7Z2V0U2VudGVuY2VDYXNlU3RyaW5nfSBmcm9tIFwiLi4vLi4vdXRpbHMvaGVscGVyc1wiO1xuaW1wb3J0IFJlY29yZGluZ092ZXJsYXkgZnJvbSBcIi4vdWkvcmVjb3JkaW5nT3ZlcmxheVwiO1xuaW1wb3J0IGZpbmRlciBmcm9tICdAbWVkdi9maW5kZXInXG5pbXBvcnQgRm9ybVdpemFyZCBmcm9tIFwiLi91aS9mb3JtV2l6YXJkXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEV2ZW50c0NvbnRyb2xsZXIge1xuICAgIHJlY29yZGluZ092ZXJsYXk6IFJlY29yZGluZ092ZXJsYXk7XG5cbiAgICBjb25zdHJ1Y3RvcihyZWNvcmRpbmdPdmVybGF5OiBSZWNvcmRpbmdPdmVybGF5KSB7XG4gICAgICAgIHRoaXMucmVjb3JkaW5nT3ZlcmxheSA9IHJlY29yZGluZ092ZXJsYXk7XG4gICAgfVxuXG4gICAgc2ltdWxhdGVDbGlja09uRWxlbWVudChlbGVtZW50OiBhbnkpe1xuICAgICAgICB0cnl7XG4gICAgICAgICAgICBjb25zdCBldmVudCA9IG5ldyBNb3VzZUV2ZW50KFwiY2xpY2tcIiwge1xuICAgICAgICAgICAgICAgIFwidmlld1wiOiB3aW5kb3csXG4gICAgICAgICAgICAgICAgXCJidWJibGVzXCI6IHRydWUsXG4gICAgICAgICAgICAgICAgXCJjYW5jZWxhYmxlXCI6IGZhbHNlXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgLy8gQWRkIHRoaXMgcHJvcGVydHkgc28gdGhhdCBnbG9iYWwgY2xpY2sgbGlzdGVuZXJcbiAgICAgICAgICAgIC8vIHJlY29nbml6ZXMgdGhpcyBpcyBhbnMgc2ltdWxhdGVkIGV2ZW50LlxuICAgICAgICAgICAgKGV2ZW50IGFzIGFueSkuc2ltdWxhdGVkRXZlbnQgPSB0cnVlO1xuICAgICAgICAgICAgZWxlbWVudC5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbiAgICAgICAgfSBjYXRjaChlcnIpe1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlbGVtZW50LCBlcnIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2ltdWxhdGVIb3Zlck9uRWxlbWVudChlbDogYW55KXtcbiAgICAgICAgdHJ5e1xuICAgICAgICAgICAgY29uc3QgZXZlbnQgPSBuZXcgRXZlbnQoJ01TJyk7XG4gICAgICAgICAgICBldmVudC5pbml0RXZlbnQoXCJtb3VzZW92ZXJcIix0cnVlLHRydWUpO1xuICAgICAgICAgICAgZWwuZGlzcGF0Y2hFdmVudChldmVudCk7XG4gICAgICAgIH0gY2F0Y2goZXJyKXtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZWwsIGVycik7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzYXZlQ2FwdHVyZWRFdmVudEluQmFja2dyb3VuZChldmVudF90eXBlOiBzdHJpbmcsIGNhcHR1cmVkVGFyZ2V0OiBhbnksIHZhbHVlOiBhbnkgPSBcIlwiLCBjYWxsYmFjaz86IGFueSl7XG4gICAgICAgIGNvbnN0IG9wdGltaXplZE1pbkxlbmd0aCA9IChjYXB0dXJlZFRhcmdldC5pZCkgPyAyIDogMTAgLy8gaWYgdGhlIHRhcmdldCBoYXMgYW4gaWQsIHVzZSB0aGF0IGluc3RlYWQgb2YgbXVsdGlwbGUgb3RoZXIgc2VsZWN0b3JzXG4gICAgICAgIGNvbnN0IHNlbGVjdG9yID0gY2FwdHVyZWRUYXJnZXQgPyBmaW5kZXIoY2FwdHVyZWRUYXJnZXQsIHtzZWVkTWluTGVuZ3RoOiA1LCBvcHRpbWl6ZWRNaW5MZW5ndGg6IG9wdGltaXplZE1pbkxlbmd0aH0pIDogbnVsbDtcblxuICAgICAgICBzZW5kTWVzc2FnZVRvQmFja2dyb3VuZCh7dHlwZTogRVZFTlRfQ0FQVFVSRUQsIHBheWxvYWQ6IHtldmVudF90eXBlOiBldmVudF90eXBlLCBzZWxlY3RvciwgdmFsdWU6IHZhbHVlID8gdmFsdWUgOiBudWxsfX0sICAocmVzOiBhbnkpID0+IHtcbiAgICAgICAgICAgIGNyZWF0ZVNuYWNrQmFyKGAke2dldFNlbnRlbmNlQ2FzZVN0cmluZyhldmVudF90eXBlKX0gYWN0aW9uIGhhcyBiZWVuIHJlY29yZGVkYCwgXCJEaXNtaXNzXCIpO1xuICAgICAgICAgICAgaWYoY2FsbGJhY2spe1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///18\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nvar previous = null;\n\nfunction createSnackBar(message, actionText, action) {\n  if (previous) {\n    previous.dismiss();\n  }\n\n  var snackbar = document.createElement(\'div\');\n  snackbar.className = \'paper-snackbar\';\n  snackbar.setAttribute("data-recorder", "true");\n\n  snackbar.dismiss = function () {\n    this.style.opacity = 0;\n  };\n\n  var successIcon = document.createElement("div");\n  successIcon.style = "display: flex; align-items: center; justify-content: center";\n  successIcon.innerHTML = "\\n<svg id=\\"successAnimation\\" data-recorder=\\"true\\" class=\\"animated\\" xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"32\\" height=\\"32\\" viewBox=\\"0 0 70 70\\">\\n  <path id=\\"successAnimationResult\\" data-recorder=\\"true\\" fill=\\"#D8D8D8\\" d=\\"M35,60 C21.1928813,60 10,48.8071187 10,35 C10,21.1928813 21.1928813,10 35,10 C48.8071187,10 60,21.1928813 60,35 C60,48.8071187 48.8071187,60 35,60 Z M23.6332378,33.2260427 L22.3667622,34.7739573 L34.1433655,44.40936 L47.776114,27.6305926 L46.223886,26.3694074 L33.8566345,41.59064 L23.6332378,33.2260427 Z\\"/>\\n  <circle id=\\"successAnimationCircle\\" data-recorder=\\"true\\" cx=\\"35\\" cy=\\"35\\" r=\\"24\\" stroke=\\"#979797\\" stroke-width=\\"2\\" stroke-linecap=\\"round\\" fill=\\"transparent\\"/>\\n  <polyline id=\\"successAnimationCheck\\" data-recorder=\\"true\\" stroke=\\"#979797\\" stroke-width=\\"2\\" points=\\"23 34 34 43 47 27\\" fill=\\"transparent\\"/>\\n</svg>";\n  successIcon.setAttribute("data-recorder", "true");\n  snackbar.appendChild(successIcon);\n  var textSpan = document.createElement("span");\n  textSpan.innerText = message;\n  textSpan.setAttribute("data-recorder", "true");\n  textSpan.style = "margin-right: auto; margin-left: 18px; font-family: Arial, Helvetica, sans-serif; font-weight: 600; font-size: 14px;";\n  snackbar.appendChild(textSpan);\n\n  if (actionText) {\n    if (!action) {\n      action = snackbar.dismiss.bind(snackbar);\n    }\n\n    var actionButton = document.createElement(\'button\');\n    actionButton.className = \'action\';\n    actionButton.innerHTML = actionText;\n    actionButton.setAttribute("data-recorder", "true");\n    actionButton.addEventListener(\'click\', action);\n    snackbar.appendChild(actionButton);\n  }\n\n  setTimeout(function () {\n    if (previous === this) {\n      previous.dismiss();\n    }\n  }.bind(snackbar), 2000);\n  snackbar.addEventListener(\'transitionend\', function (event) {\n    if (event.propertyName === \'opacity\' && this.style.opacity == 0) {\n      this.parentElement.removeChild(this);\n\n      if (previous === this) {\n        previous = null;\n      }\n    }\n  }.bind(snackbar));\n  previous = snackbar;\n  document.body.appendChild(snackbar);\n  getComputedStyle(snackbar).bottom;\n  snackbar.style.bottom = \'-24px\';\n  snackbar.style.opacity = 1;\n}\n\nexports.createSnackBar = createSnackBar;\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9pbmplY3QvdG9hc3QudHM/NjY3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgcHJldmlvdXM6IGFueSA9IG51bGw7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTbmFja0JhcihtZXNzYWdlOiBzdHJpbmcsIGFjdGlvblRleHQ6IHN0cmluZywgYWN0aW9uPzogYW55KSB7XG5cbiAgICAgICAgaWYgKHByZXZpb3VzKSB7XG4gICAgICAgICAgICBwcmV2aW91cy5kaXNtaXNzKCk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHNuYWNrYmFyOiBhbnkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgc25hY2tiYXIuY2xhc3NOYW1lID0gJ3BhcGVyLXNuYWNrYmFyJztcbiAgICAgICAgc25hY2tiYXIuc2V0QXR0cmlidXRlKFwiZGF0YS1yZWNvcmRlclwiLCBcInRydWVcIik7XG4gICAgICAgIHNuYWNrYmFyLmRpc21pc3MgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHRoaXMuc3R5bGUub3BhY2l0eSA9IDA7XG4gICAgICAgIH07XG4gICAgY29uc3Qgc3VjY2Vzc0ljb246IGFueSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgc3VjY2Vzc0ljb24uc3R5bGUgPSBcImRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogY2VudGVyXCI7XG4gICAgc3VjY2Vzc0ljb24uaW5uZXJIVE1MID0gYFxuPHN2ZyBpZD1cInN1Y2Nlc3NBbmltYXRpb25cIiBkYXRhLXJlY29yZGVyPVwidHJ1ZVwiIGNsYXNzPVwiYW5pbWF0ZWRcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIzMlwiIGhlaWdodD1cIjMyXCIgdmlld0JveD1cIjAgMCA3MCA3MFwiPlxuICA8cGF0aCBpZD1cInN1Y2Nlc3NBbmltYXRpb25SZXN1bHRcIiBkYXRhLXJlY29yZGVyPVwidHJ1ZVwiIGZpbGw9XCIjRDhEOEQ4XCIgZD1cIk0zNSw2MCBDMjEuMTkyODgxMyw2MCAxMCw0OC44MDcxMTg3IDEwLDM1IEMxMCwyMS4xOTI4ODEzIDIxLjE5Mjg4MTMsMTAgMzUsMTAgQzQ4LjgwNzExODcsMTAgNjAsMjEuMTkyODgxMyA2MCwzNSBDNjAsNDguODA3MTE4NyA0OC44MDcxMTg3LDYwIDM1LDYwIFogTTIzLjYzMzIzNzgsMzMuMjI2MDQyNyBMMjIuMzY2NzYyMiwzNC43NzM5NTczIEwzNC4xNDMzNjU1LDQ0LjQwOTM2IEw0Ny43NzYxMTQsMjcuNjMwNTkyNiBMNDYuMjIzODg2LDI2LjM2OTQwNzQgTDMzLjg1NjYzNDUsNDEuNTkwNjQgTDIzLjYzMzIzNzgsMzMuMjI2MDQyNyBaXCIvPlxuICA8Y2lyY2xlIGlkPVwic3VjY2Vzc0FuaW1hdGlvbkNpcmNsZVwiIGRhdGEtcmVjb3JkZXI9XCJ0cnVlXCIgY3g9XCIzNVwiIGN5PVwiMzVcIiByPVwiMjRcIiBzdHJva2U9XCIjOTc5Nzk3XCIgc3Ryb2tlLXdpZHRoPVwiMlwiIHN0cm9rZS1saW5lY2FwPVwicm91bmRcIiBmaWxsPVwidHJhbnNwYXJlbnRcIi8+XG4gIDxwb2x5bGluZSBpZD1cInN1Y2Nlc3NBbmltYXRpb25DaGVja1wiIGRhdGEtcmVjb3JkZXI9XCJ0cnVlXCIgc3Ryb2tlPVwiIzk3OTc5N1wiIHN0cm9rZS13aWR0aD1cIjJcIiBwb2ludHM9XCIyMyAzNCAzNCA0MyA0NyAyN1wiIGZpbGw9XCJ0cmFuc3BhcmVudFwiLz5cbjwvc3ZnPmA7XG4gICAgc3VjY2Vzc0ljb24uc2V0QXR0cmlidXRlKFwiZGF0YS1yZWNvcmRlclwiLCBcInRydWVcIik7XG5cbiAgICBzbmFja2Jhci5hcHBlbmRDaGlsZChzdWNjZXNzSWNvbik7XG4gICAgICAgIGxldCB0ZXh0U3BhbjogYW55ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4gICAgdGV4dFNwYW4uaW5uZXJUZXh0ID0gbWVzc2FnZTtcbiAgICB0ZXh0U3Bhbi5zZXRBdHRyaWJ1dGUoXCJkYXRhLXJlY29yZGVyXCIsIFwidHJ1ZVwiKTtcbiAgICB0ZXh0U3Bhbi5zdHlsZSA9IFwibWFyZ2luLXJpZ2h0OiBhdXRvOyBtYXJnaW4tbGVmdDogMThweDsgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGZvbnQtd2VpZ2h0OiA2MDA7IGZvbnQtc2l6ZTogMTRweDtcIjtcbiAgICAgICAgc25hY2tiYXIuYXBwZW5kQ2hpbGQodGV4dFNwYW4pO1xuICAgIGlmIChhY3Rpb25UZXh0KSB7XG4gICAgICAgIGlmICghYWN0aW9uKSB7XG4gICAgICAgICAgICBhY3Rpb24gPSBzbmFja2Jhci5kaXNtaXNzLmJpbmQoc25hY2tiYXIpO1xuICAgICAgICB9XG4gICAgICAgIGxldCBhY3Rpb25CdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAgICAgYWN0aW9uQnV0dG9uLmNsYXNzTmFtZSA9ICdhY3Rpb24nO1xuICAgICAgICBhY3Rpb25CdXR0b24uaW5uZXJIVE1MID0gYWN0aW9uVGV4dDtcbiAgICAgICAgYWN0aW9uQnV0dG9uLnNldEF0dHJpYnV0ZShcImRhdGEtcmVjb3JkZXJcIiwgXCJ0cnVlXCIpO1xuICAgICAgICBhY3Rpb25CdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhY3Rpb24pO1xuICAgICAgICBzbmFja2Jhci5hcHBlbmRDaGlsZChhY3Rpb25CdXR0b24pO1xuICAgIH1cbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmIChwcmV2aW91cyA9PT0gdGhpcykge1xuICAgICAgICAgICAgICAgIHByZXZpb3VzLmRpc21pc3MoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfS5iaW5kKHNuYWNrYmFyKSwgMjAwMCk7XG5cbiAgICAgICAgc25hY2tiYXIuYWRkRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsIGZ1bmN0aW9uKGV2ZW50OiBUcmFuc2l0aW9uRXZlbnQpIHtcbiAgICAgICAgICAgIGlmIChldmVudC5wcm9wZXJ0eU5hbWUgPT09ICdvcGFjaXR5JyAmJiB0aGlzLnN0eWxlLm9wYWNpdHkgPT0gMCkge1xuICAgICAgICAgICAgICAgIHRoaXMucGFyZW50RWxlbWVudC5yZW1vdmVDaGlsZCh0aGlzKTtcbiAgICAgICAgICAgICAgICBpZiAocHJldmlvdXMgPT09IHRoaXMpIHtcbiAgICAgICAgICAgICAgICAgICAgcHJldmlvdXMgPSBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfS5iaW5kKHNuYWNrYmFyKSk7XG5cbiAgICAgICAgcHJldmlvdXMgPSBzbmFja2JhcjtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzbmFja2Jhcik7XG4gICAgICAgIC8vIEluIG9yZGVyIGZvciB0aGUgYW5pbWF0aW9ucyB0byB0cmlnZ2VyLCBJIGhhdmUgdG8gZm9yY2UgdGhlIG9yaWdpbmFsIHN0eWxlIHRvIGJlIGNvbXB1dGVkLCBhbmQgdGhlbiBjaGFuZ2UgaXQuXG4gICAgICAgIGdldENvbXB1dGVkU3R5bGUoc25hY2tiYXIpLmJvdHRvbTtcbiAgICAgICAgc25hY2tiYXIuc3R5bGUuYm90dG9tID0gJy0yNHB4JztcbiAgICAgICAgc25hY2tiYXIuc3R5bGUub3BhY2l0eSA9IDE7XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQU1BO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTVEQTtBQTJEQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///19\n')},function(module,exports,__webpack_require__){"use strict";eval('\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nvar cssesc = __webpack_require__(21);\nvar Limit;\n(function (Limit) {\n    Limit[Limit["All"] = 0] = "All";\n    Limit[Limit["Two"] = 1] = "Two";\n    Limit[Limit["One"] = 2] = "One";\n})(Limit || (Limit = {}));\nvar config;\nvar rootDocument;\nfunction default_1(input, options) {\n    if (input.nodeType !== Node.ELEMENT_NODE) {\n        throw new Error("Can\'t generate CSS selector for non-element node type.");\n    }\n    if (\'html\' === input.tagName.toLowerCase()) {\n        return \'html\';\n    }\n    var defaults = {\n        root: document.body,\n        idName: function (name) { return true; },\n        className: function (name) { return true; },\n        tagName: function (name) { return true; },\n        attr: function (name, value) { return false; },\n        seedMinLength: 1,\n        optimizedMinLength: 2,\n        threshold: 1000,\n        maxNumberOfTries: 10000,\n    };\n    config = __assign({}, defaults, options);\n    rootDocument = findRootDocument(config.root, defaults);\n    var path = bottomUpSearch(input, Limit.All, function () {\n        return bottomUpSearch(input, Limit.Two, function () {\n            return bottomUpSearch(input, Limit.One);\n        });\n    });\n    if (path) {\n        var optimized = sort(optimize(path, input));\n        if (optimized.length > 0) {\n            path = optimized[0];\n        }\n        return selector(path);\n    }\n    else {\n        throw new Error("Selector was not found.");\n    }\n}\nexports.default = default_1;\nfunction findRootDocument(rootNode, defaults) {\n    if (rootNode.nodeType === Node.DOCUMENT_NODE) {\n        return rootNode;\n    }\n    if (rootNode === defaults.root) {\n        return rootNode.ownerDocument;\n    }\n    return rootNode;\n}\nfunction bottomUpSearch(input, limit, fallback) {\n    var path = null;\n    var stack = [];\n    var current = input;\n    var i = 0;\n    var _loop_1 = function () {\n        var level = maybe(id(current)) || maybe.apply(void 0, attr(current)) || maybe.apply(void 0, classNames(current)) || maybe(tagName(current)) || [any()];\n        var nth = index(current);\n        if (limit === Limit.All) {\n            if (nth) {\n                level = level.concat(level.filter(dispensableNth).map(function (node) { return nthChild(node, nth); }));\n            }\n        }\n        else if (limit === Limit.Two) {\n            level = level.slice(0, 1);\n            if (nth) {\n                level = level.concat(level.filter(dispensableNth).map(function (node) { return nthChild(node, nth); }));\n            }\n        }\n        else if (limit === Limit.One) {\n            var node = (level = level.slice(0, 1))[0];\n            if (nth && dispensableNth(node)) {\n                level = [nthChild(node, nth)];\n            }\n        }\n        for (var _i = 0, level_1 = level; _i < level_1.length; _i++) {\n            var node = level_1[_i];\n            node.level = i;\n        }\n        stack.push(level);\n        if (stack.length >= config.seedMinLength) {\n            path = findUniquePath(stack, fallback);\n            if (path) {\n                return "break";\n            }\n        }\n        current = current.parentElement;\n        i++;\n    };\n    while (current && current !== config.root.parentElement) {\n        var state_1 = _loop_1();\n        if (state_1 === "break")\n            break;\n    }\n    if (!path) {\n        path = findUniquePath(stack, fallback);\n    }\n    return path;\n}\nfunction findUniquePath(stack, fallback) {\n    var paths = sort(combinations(stack));\n    if (paths.length > config.threshold) {\n        return fallback ? fallback() : null;\n    }\n    for (var _i = 0, paths_1 = paths; _i < paths_1.length; _i++) {\n        var candidate = paths_1[_i];\n        if (unique(candidate)) {\n            return candidate;\n        }\n    }\n    return null;\n}\nfunction selector(path) {\n    var node = path[0];\n    var query = node.name;\n    for (var i = 1; i < path.length; i++) {\n        var level = path[i].level || 0;\n        if (node.level === level - 1) {\n            query = path[i].name + " > " + query;\n        }\n        else {\n            query = path[i].name + " " + query;\n        }\n        node = path[i];\n    }\n    return query;\n}\nfunction penalty(path) {\n    return path.map(function (node) { return node.penalty; }).reduce(function (acc, i) { return acc + i; }, 0);\n}\nfunction unique(path) {\n    switch (rootDocument.querySelectorAll(selector(path)).length) {\n        case 0:\n            throw new Error("Can\'t select any node with this selector: " + selector(path));\n        case 1:\n            return true;\n        default:\n            return false;\n    }\n}\nfunction id(input) {\n    var elementId = input.getAttribute(\'id\');\n    if (elementId && config.idName(elementId)) {\n        return {\n            name: \'#\' + cssesc(elementId, { isIdentifier: true }),\n            penalty: 0,\n        };\n    }\n    return null;\n}\nfunction attr(input) {\n    var attrs = Array.from(input.attributes).filter(function (attr) { return config.attr(attr.name, attr.value); });\n    return attrs.map(function (attr) { return ({\n        name: \'[\' + cssesc(attr.name, { isIdentifier: true }) + \'="\' + cssesc(attr.value) + \'"]\',\n        penalty: 0.5\n    }); });\n}\nfunction classNames(input) {\n    var names = Array.from(input.classList)\n        .filter(config.className);\n    return names.map(function (name) { return ({\n        name: \'.\' + cssesc(name, { isIdentifier: true }),\n        penalty: 1\n    }); });\n}\nfunction tagName(input) {\n    var name = input.tagName.toLowerCase();\n    if (config.tagName(name)) {\n        return {\n            name: name,\n            penalty: 2\n        };\n    }\n    return null;\n}\nfunction any() {\n    return {\n        name: \'*\',\n        penalty: 3\n    };\n}\nfunction index(input) {\n    var parent = input.parentNode;\n    if (!parent) {\n        return null;\n    }\n    var child = parent.firstChild;\n    if (!child) {\n        return null;\n    }\n    var i = 0;\n    while (child) {\n        if (child.nodeType === Node.ELEMENT_NODE) {\n            i++;\n        }\n        if (child === input) {\n            break;\n        }\n        child = child.nextSibling;\n    }\n    return i;\n}\nfunction nthChild(node, i) {\n    return {\n        name: node.name + (":nth-child(" + i + ")"),\n        penalty: node.penalty + 1\n    };\n}\nfunction dispensableNth(node) {\n    return node.name !== \'html\' && !node.name.startsWith(\'#\');\n}\nfunction maybe() {\n    var level = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        level[_i] = arguments[_i];\n    }\n    var list = level.filter(notEmpty);\n    if (list.length > 0) {\n        return list;\n    }\n    return null;\n}\nfunction notEmpty(value) {\n    return value !== null && value !== undefined;\n}\nfunction combinations(stack, path) {\n    var _i, _a, node;\n    if (path === void 0) { path = []; }\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (!(stack.length > 0)) return [3 /*break*/, 5];\n                _i = 0, _a = stack[0];\n                _b.label = 1;\n            case 1:\n                if (!(_i < _a.length)) return [3 /*break*/, 4];\n                node = _a[_i];\n                return [5 /*yield**/, __values(combinations(stack.slice(1, stack.length), path.concat(node)))];\n            case 2:\n                _b.sent();\n                _b.label = 3;\n            case 3:\n                _i++;\n                return [3 /*break*/, 1];\n            case 4: return [3 /*break*/, 7];\n            case 5: return [4 /*yield*/, path];\n            case 6:\n                _b.sent();\n                _b.label = 7;\n            case 7: return [2 /*return*/];\n        }\n    });\n}\nfunction sort(paths) {\n    return Array.from(paths).sort(function (a, b) { return penalty(a) - penalty(b); });\n}\nfunction optimize(path, input, scope) {\n    var i, newPath, newPathKey;\n    if (scope === void 0) { scope = { counter: 0, visited: new Map() }; }\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!(path.length > 2 && path.length > config.optimizedMinLength)) return [3 /*break*/, 5];\n                i = 1;\n                _a.label = 1;\n            case 1:\n                if (!(i < path.length - 1)) return [3 /*break*/, 5];\n                if (scope.counter > config.maxNumberOfTries) {\n                    return [2 /*return*/]; // Okay At least I tried!\n                }\n                scope.counter += 1;\n                newPath = path.slice();\n                newPath.splice(i, 1);\n                newPathKey = selector(newPath);\n                if (scope.visited.has(newPathKey)) {\n                    return [2 /*return*/];\n                }\n                if (!(unique(newPath) && same(newPath, input))) return [3 /*break*/, 4];\n                return [4 /*yield*/, newPath];\n            case 2:\n                _a.sent();\n                scope.visited.set(newPathKey, true);\n                return [5 /*yield**/, __values(optimize(newPath, input, scope))];\n            case 3:\n                _a.sent();\n                _a.label = 4;\n            case 4:\n                i++;\n                return [3 /*break*/, 1];\n            case 5: return [2 /*return*/];\n        }\n    });\n}\nfunction same(path, input) {\n    return rootDocument.querySelector(selector(path)) === input;\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///20\n')},function(module,exports,__webpack_require__){"use strict";eval("/*! https://mths.be/cssesc v1.0.1 by @mathias */\n\n\nvar object = {};\nvar hasOwnProperty = object.hasOwnProperty;\nvar merge = function merge(options, defaults) {\n\tif (!options) {\n\t\treturn defaults;\n\t}\n\tvar result = {};\n\tfor (var key in defaults) {\n\t\t// `if (defaults.hasOwnProperty(key) { … }` is not needed here, since\n\t\t// only recognized option names are used.\n\t\tresult[key] = hasOwnProperty.call(options, key) ? options[key] : defaults[key];\n\t}\n\treturn result;\n};\n\nvar regexAnySingleEscape = /[ -,\\.\\/;-@\\[-\\^`\\{-~]/;\nvar regexSingleEscape = /[ -,\\.\\/;-@\\[\\]\\^`\\{-~]/;\nvar regexAlwaysEscape = /['\"\\\\]/;\nvar regexExcessiveSpaces = /(^|\\\\+)?(\\\\[A-F0-9]{1,6})\\x20(?![a-fA-F0-9\\x20])/g;\n\n// https://mathiasbynens.be/notes/css-escapes#css\nvar cssesc = function cssesc(string, options) {\n\toptions = merge(options, cssesc.options);\n\tif (options.quotes != 'single' && options.quotes != 'double') {\n\t\toptions.quotes = 'single';\n\t}\n\tvar quote = options.quotes == 'double' ? '\"' : '\\'';\n\tvar isIdentifier = options.isIdentifier;\n\n\tvar firstChar = string.charAt(0);\n\tvar output = '';\n\tvar counter = 0;\n\tvar length = string.length;\n\twhile (counter < length) {\n\t\tvar character = string.charAt(counter++);\n\t\tvar codePoint = character.charCodeAt();\n\t\tvar value = void 0;\n\t\t// If it’s not a printable ASCII character…\n\t\tif (codePoint < 0x20 || codePoint > 0x7E) {\n\t\t\tif (codePoint >= 0xD800 && codePoint <= 0xDBFF && counter < length) {\n\t\t\t\t// It’s a high surrogate, and there is a next character.\n\t\t\t\tvar extra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) {\n\t\t\t\t\t// next character is low surrogate\n\t\t\t\t\tcodePoint = ((codePoint & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000;\n\t\t\t\t} else {\n\t\t\t\t\t// It’s an unmatched surrogate; only append this code unit, in case\n\t\t\t\t\t// the next code unit is the high surrogate of a surrogate pair.\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t} else {\n\t\t\tif (options.escapeEverything) {\n\t\t\t\tif (regexAnySingleEscape.test(character)) {\n\t\t\t\t\tvalue = '\\\\' + character;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t\t}\n\t\t\t\t// Note: `:` could be escaped as `\\:`, but that fails in IE < 8.\n\t\t\t} else if (/[\\t\\n\\f\\r\\x0B:]/.test(character)) {\n\t\t\t\tif (!isIdentifier && character == ':') {\n\t\t\t\t\tvalue = character;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t\t}\n\t\t\t} else if (character == '\\\\' || !isIdentifier && (character == '\"' && quote == character || character == '\\'' && quote == character) || isIdentifier && regexSingleEscape.test(character)) {\n\t\t\t\tvalue = '\\\\' + character;\n\t\t\t} else {\n\t\t\t\tvalue = character;\n\t\t\t}\n\t\t}\n\t\toutput += value;\n\t}\n\n\tif (isIdentifier) {\n\t\tif (/^_/.test(output)) {\n\t\t\t// Prevent IE6 from ignoring the rule altogether (in case this is for an\n\t\t\t// identifier used as a selector)\n\t\t\toutput = '\\\\_' + output.slice(1);\n\t\t} else if (/^-[-\\d]/.test(output)) {\n\t\t\toutput = '\\\\-' + output.slice(1);\n\t\t} else if (/\\d/.test(firstChar)) {\n\t\t\toutput = '\\\\3' + firstChar + ' ' + output.slice(1);\n\t\t}\n\t}\n\n\t// Remove spaces after `\\HEX` escapes that are not followed by a hex digit,\n\t// since they’re redundant. Note that this is only possible if the escape\n\t// sequence isn’t preceded by an odd number of backslashes.\n\toutput = output.replace(regexExcessiveSpaces, function ($0, $1, $2) {\n\t\tif ($1 && $1.length % 2) {\n\t\t\t// It’s not safe to remove the space, so don’t.\n\t\t\treturn $0;\n\t\t}\n\t\t// Strip the space.\n\t\treturn ($1 || '') + $2;\n\t});\n\n\tif (!isIdentifier && options.wrap) {\n\t\treturn quote + output + quote;\n\t}\n\treturn output;\n};\n\n// Expose default options (so they can be overridden globally).\ncssesc.options = {\n\t'escapeEverything': false,\n\t'isIdentifier': false,\n\t'quotes': 'single',\n\t'wrap': false\n};\n\ncssesc.version = '1.0.1';\n\nmodule.exports = cssesc;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzZXNjL2Nzc2VzYy5qcz8wYjhhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBodHRwczovL210aHMuYmUvY3NzZXNjIHYxLjAuMSBieSBAbWF0aGlhcyAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgb2JqZWN0ID0ge307XG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3QuaGFzT3duUHJvcGVydHk7XG52YXIgbWVyZ2UgPSBmdW5jdGlvbiBtZXJnZShvcHRpb25zLCBkZWZhdWx0cykge1xuXHRpZiAoIW9wdGlvbnMpIHtcblx0XHRyZXR1cm4gZGVmYXVsdHM7XG5cdH1cblx0dmFyIHJlc3VsdCA9IHt9O1xuXHRmb3IgKHZhciBrZXkgaW4gZGVmYXVsdHMpIHtcblx0XHQvLyBgaWYgKGRlZmF1bHRzLmhhc093blByb3BlcnR5KGtleSkgeyDigKYgfWAgaXMgbm90IG5lZWRlZCBoZXJlLCBzaW5jZVxuXHRcdC8vIG9ubHkgcmVjb2duaXplZCBvcHRpb24gbmFtZXMgYXJlIHVzZWQuXG5cdFx0cmVzdWx0W2tleV0gPSBoYXNPd25Qcm9wZXJ0eS5jYWxsKG9wdGlvbnMsIGtleSkgPyBvcHRpb25zW2tleV0gOiBkZWZhdWx0c1trZXldO1xuXHR9XG5cdHJldHVybiByZXN1bHQ7XG59O1xuXG52YXIgcmVnZXhBbnlTaW5nbGVFc2NhcGUgPSAvWyAtLFxcLlxcLzstQFxcWy1cXF5gXFx7LX5dLztcbnZhciByZWdleFNpbmdsZUVzY2FwZSA9IC9bIC0sXFwuXFwvOy1AXFxbXFxdXFxeYFxcey1+XS87XG52YXIgcmVnZXhBbHdheXNFc2NhcGUgPSAvWydcIlxcXFxdLztcbnZhciByZWdleEV4Y2Vzc2l2ZVNwYWNlcyA9IC8oXnxcXFxcKyk/KFxcXFxbQS1GMC05XXsxLDZ9KVxceDIwKD8hW2EtZkEtRjAtOVxceDIwXSkvZztcblxuLy8gaHR0cHM6Ly9tYXRoaWFzYnluZW5zLmJlL25vdGVzL2Nzcy1lc2NhcGVzI2Nzc1xudmFyIGNzc2VzYyA9IGZ1bmN0aW9uIGNzc2VzYyhzdHJpbmcsIG9wdGlvbnMpIHtcblx0b3B0aW9ucyA9IG1lcmdlKG9wdGlvbnMsIGNzc2VzYy5vcHRpb25zKTtcblx0aWYgKG9wdGlvbnMucXVvdGVzICE9ICdzaW5nbGUnICYmIG9wdGlvbnMucXVvdGVzICE9ICdkb3VibGUnKSB7XG5cdFx0b3B0aW9ucy5xdW90ZXMgPSAnc2luZ2xlJztcblx0fVxuXHR2YXIgcXVvdGUgPSBvcHRpb25zLnF1b3RlcyA9PSAnZG91YmxlJyA/ICdcIicgOiAnXFwnJztcblx0dmFyIGlzSWRlbnRpZmllciA9IG9wdGlvbnMuaXNJZGVudGlmaWVyO1xuXG5cdHZhciBmaXJzdENoYXIgPSBzdHJpbmcuY2hhckF0KDApO1xuXHR2YXIgb3V0cHV0ID0gJyc7XG5cdHZhciBjb3VudGVyID0gMDtcblx0dmFyIGxlbmd0aCA9IHN0cmluZy5sZW5ndGg7XG5cdHdoaWxlIChjb3VudGVyIDwgbGVuZ3RoKSB7XG5cdFx0dmFyIGNoYXJhY3RlciA9IHN0cmluZy5jaGFyQXQoY291bnRlcisrKTtcblx0XHR2YXIgY29kZVBvaW50ID0gY2hhcmFjdGVyLmNoYXJDb2RlQXQoKTtcblx0XHR2YXIgdmFsdWUgPSB2b2lkIDA7XG5cdFx0Ly8gSWYgaXTigJlzIG5vdCBhIHByaW50YWJsZSBBU0NJSSBjaGFyYWN0ZXLigKZcblx0XHRpZiAoY29kZVBvaW50IDwgMHgyMCB8fCBjb2RlUG9pbnQgPiAweDdFKSB7XG5cdFx0XHRpZiAoY29kZVBvaW50ID49IDB4RDgwMCAmJiBjb2RlUG9pbnQgPD0gMHhEQkZGICYmIGNvdW50ZXIgPCBsZW5ndGgpIHtcblx0XHRcdFx0Ly8gSXTigJlzIGEgaGlnaCBzdXJyb2dhdGUsIGFuZCB0aGVyZSBpcyBhIG5leHQgY2hhcmFjdGVyLlxuXHRcdFx0XHR2YXIgZXh0cmEgPSBzdHJpbmcuY2hhckNvZGVBdChjb3VudGVyKyspO1xuXHRcdFx0XHRpZiAoKGV4dHJhICYgMHhGQzAwKSA9PSAweERDMDApIHtcblx0XHRcdFx0XHQvLyBuZXh0IGNoYXJhY3RlciBpcyBsb3cgc3Vycm9nYXRlXG5cdFx0XHRcdFx0Y29kZVBvaW50ID0gKChjb2RlUG9pbnQgJiAweDNGRikgPDwgMTApICsgKGV4dHJhICYgMHgzRkYpICsgMHgxMDAwMDtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHQvLyBJdOKAmXMgYW4gdW5tYXRjaGVkIHN1cnJvZ2F0ZTsgb25seSBhcHBlbmQgdGhpcyBjb2RlIHVuaXQsIGluIGNhc2Vcblx0XHRcdFx0XHQvLyB0aGUgbmV4dCBjb2RlIHVuaXQgaXMgdGhlIGhpZ2ggc3Vycm9nYXRlIG9mIGEgc3Vycm9nYXRlIHBhaXIuXG5cdFx0XHRcdFx0Y291bnRlci0tO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHR2YWx1ZSA9ICdcXFxcJyArIGNvZGVQb2ludC50b1N0cmluZygxNikudG9VcHBlckNhc2UoKSArICcgJztcblx0XHR9IGVsc2Uge1xuXHRcdFx0aWYgKG9wdGlvbnMuZXNjYXBlRXZlcnl0aGluZykge1xuXHRcdFx0XHRpZiAocmVnZXhBbnlTaW5nbGVFc2NhcGUudGVzdChjaGFyYWN0ZXIpKSB7XG5cdFx0XHRcdFx0dmFsdWUgPSAnXFxcXCcgKyBjaGFyYWN0ZXI7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dmFsdWUgPSAnXFxcXCcgKyBjb2RlUG9pbnQudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCkgKyAnICc7XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gTm90ZTogYDpgIGNvdWxkIGJlIGVzY2FwZWQgYXMgYFxcOmAsIGJ1dCB0aGF0IGZhaWxzIGluIElFIDwgOC5cblx0XHRcdH0gZWxzZSBpZiAoL1tcXHRcXG5cXGZcXHJcXHgwQjpdLy50ZXN0KGNoYXJhY3RlcikpIHtcblx0XHRcdFx0aWYgKCFpc0lkZW50aWZpZXIgJiYgY2hhcmFjdGVyID09ICc6Jykge1xuXHRcdFx0XHRcdHZhbHVlID0gY2hhcmFjdGVyO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHZhbHVlID0gJ1xcXFwnICsgY29kZVBvaW50LnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpICsgJyAnO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2UgaWYgKGNoYXJhY3RlciA9PSAnXFxcXCcgfHwgIWlzSWRlbnRpZmllciAmJiAoY2hhcmFjdGVyID09ICdcIicgJiYgcXVvdGUgPT0gY2hhcmFjdGVyIHx8IGNoYXJhY3RlciA9PSAnXFwnJyAmJiBxdW90ZSA9PSBjaGFyYWN0ZXIpIHx8IGlzSWRlbnRpZmllciAmJiByZWdleFNpbmdsZUVzY2FwZS50ZXN0KGNoYXJhY3RlcikpIHtcblx0XHRcdFx0dmFsdWUgPSAnXFxcXCcgKyBjaGFyYWN0ZXI7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR2YWx1ZSA9IGNoYXJhY3Rlcjtcblx0XHRcdH1cblx0XHR9XG5cdFx0b3V0cHV0ICs9IHZhbHVlO1xuXHR9XG5cblx0aWYgKGlzSWRlbnRpZmllcikge1xuXHRcdGlmICgvXl8vLnRlc3Qob3V0cHV0KSkge1xuXHRcdFx0Ly8gUHJldmVudCBJRTYgZnJvbSBpZ25vcmluZyB0aGUgcnVsZSBhbHRvZ2V0aGVyIChpbiBjYXNlIHRoaXMgaXMgZm9yIGFuXG5cdFx0XHQvLyBpZGVudGlmaWVyIHVzZWQgYXMgYSBzZWxlY3Rvcilcblx0XHRcdG91dHB1dCA9ICdcXFxcXycgKyBvdXRwdXQuc2xpY2UoMSk7XG5cdFx0fSBlbHNlIGlmICgvXi1bLVxcZF0vLnRlc3Qob3V0cHV0KSkge1xuXHRcdFx0b3V0cHV0ID0gJ1xcXFwtJyArIG91dHB1dC5zbGljZSgxKTtcblx0XHR9IGVsc2UgaWYgKC9cXGQvLnRlc3QoZmlyc3RDaGFyKSkge1xuXHRcdFx0b3V0cHV0ID0gJ1xcXFwzJyArIGZpcnN0Q2hhciArICcgJyArIG91dHB1dC5zbGljZSgxKTtcblx0XHR9XG5cdH1cblxuXHQvLyBSZW1vdmUgc3BhY2VzIGFmdGVyIGBcXEhFWGAgZXNjYXBlcyB0aGF0IGFyZSBub3QgZm9sbG93ZWQgYnkgYSBoZXggZGlnaXQsXG5cdC8vIHNpbmNlIHRoZXnigJlyZSByZWR1bmRhbnQuIE5vdGUgdGhhdCB0aGlzIGlzIG9ubHkgcG9zc2libGUgaWYgdGhlIGVzY2FwZVxuXHQvLyBzZXF1ZW5jZSBpc27igJl0IHByZWNlZGVkIGJ5IGFuIG9kZCBudW1iZXIgb2YgYmFja3NsYXNoZXMuXG5cdG91dHB1dCA9IG91dHB1dC5yZXBsYWNlKHJlZ2V4RXhjZXNzaXZlU3BhY2VzLCBmdW5jdGlvbiAoJDAsICQxLCAkMikge1xuXHRcdGlmICgkMSAmJiAkMS5sZW5ndGggJSAyKSB7XG5cdFx0XHQvLyBJdOKAmXMgbm90IHNhZmUgdG8gcmVtb3ZlIHRoZSBzcGFjZSwgc28gZG9u4oCZdC5cblx0XHRcdHJldHVybiAkMDtcblx0XHR9XG5cdFx0Ly8gU3RyaXAgdGhlIHNwYWNlLlxuXHRcdHJldHVybiAoJDEgfHwgJycpICsgJDI7XG5cdH0pO1xuXG5cdGlmICghaXNJZGVudGlmaWVyICYmIG9wdGlvbnMud3JhcCkge1xuXHRcdHJldHVybiBxdW90ZSArIG91dHB1dCArIHF1b3RlO1xuXHR9XG5cdHJldHVybiBvdXRwdXQ7XG59O1xuXG4vLyBFeHBvc2UgZGVmYXVsdCBvcHRpb25zIChzbyB0aGV5IGNhbiBiZSBvdmVycmlkZGVuIGdsb2JhbGx5KS5cbmNzc2VzYy5vcHRpb25zID0ge1xuXHQnZXNjYXBlRXZlcnl0aGluZyc6IGZhbHNlLFxuXHQnaXNJZGVudGlmaWVyJzogZmFsc2UsXG5cdCdxdW90ZXMnOiAnc2luZ2xlJyxcblx0J3dyYXAnOiBmYWxzZVxufTtcblxuY3NzZXNjLnZlcnNpb24gPSAnMS4wLjEnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNzc2VzYztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///21\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar dom_1 = __webpack_require__(7);\n\nvar DOMEventsToRecord_1 = __webpack_require__(5);\n\nvar constants_1 = __webpack_require__(2);\n\nvar FormWizard = function () {\n  function FormWizard(recordingOverlay, eventsController) {\n    this.state = {\n      isInvalidScript: false\n    };\n    this.recordingOverlay = recordingOverlay;\n    this.eventsController = eventsController;\n    this.evaluateValidationScript = this.evaluateValidationScript.bind(this);\n    this.handleSaveExtractForm = this.handleSaveExtractForm.bind(this);\n    this.evaluteAssertText = this.evaluteAssertText.bind(this);\n    this.handleSaveAssertForm = this.handleSaveAssertForm.bind(this);\n  }\n\n  FormWizard.prototype.initNodes = function () {\n    this._modalHeading = document.querySelector(".overlay_heading_container .overlay_heading");\n    this._modalContentContainer = document.querySelector(".overlay_modal_content");\n    this._extract_event_form = document.querySelector("#extract_event_form");\n    this._assertEventForm = document.querySelector("#assert_event_form");\n    this._validationScriptTextArea = document.querySelector("#validation_script");\n    this._assertComparisionText = document.querySelector("#assert_comparision_text");\n    this._assertValidation = document.querySelector("#assert_validation");\n    this._validationScript = document.querySelector("#extract_event_form #validation_script");\n    this._extractedInfoPreview = document.querySelector("#extract_event_form #extracted_info_preview");\n    this._extractVariableName = document.querySelector("#extract_variable_name");\n    this._submitExtractForm = document.querySelector("#submit_extract_form");\n    this._submitAssertForm = document.querySelector("#submit_assert_form");\n  };\n\n  FormWizard.prototype.evaluateValidationScript = function () {\n    try {\n      var targetElement = this.recordingOverlay.getState().targetElement;\n      var escapedHTML = targetElement.innerHTML.toString().replace(/\\`/g, "\\\\`").trim();\n      var escapedText = targetElement.innerText.replace(/\\`/g, "\\\\`").trim();\n      var script = "(" + this._validationScript.value + ")(" + \'`\' + escapedHTML + \'`\' + ", " + \'`\' + ("" + escapedText) + \'`\' + ")";\n      var output = eval(script);\n      this._extractedInfoPreview.value = output;\n      this._extractedInfoPreview.style = "";\n      this._validationScriptTextArea.style = "";\n      this.state.invalid = false;\n    } catch (_a) {\n      this._extractedInfoPreview.style = "border: 1px solid red;";\n      this._validationScriptTextArea.style = "border: 1px solid red;";\n      this.state.invalid = true;\n    }\n  };\n\n  FormWizard.prototype.handleSaveExtractForm = function () {\n    var _a;\n\n    var variableName = this._extractVariableName.value;\n    var scriptContent = this._validationScript.value;\n    var isInvalidScript = this.state.isInvalidScript;\n    var targetElement = this.recordingOverlay.getState().targetElement;\n\n    if (!isInvalidScript && variableName && scriptContent) {\n      var payload = (_a = {}, _a[variableName] = scriptContent, _a);\n      this.eventsController.saveCapturedEventInBackground(DOMEventsToRecord_1.EXTRACT_INFO, targetElement, payload);\n      this.recordingOverlay.toggleEventsBox();\n    } else {\n      console.log(isInvalidScript, variableName, scriptContent);\n    }\n  };\n\n  FormWizard.prototype.handleSaveAssertForm = function () {\n    var comparisionText = this._assertComparisionText.value;\n    var targetElement = this.recordingOverlay.getState().targetElement;\n    this.eventsController.saveCapturedEventInBackground(DOMEventsToRecord_1.ASSERT_TEXT, targetElement, comparisionText);\n    this.recordingOverlay.toggleEventsBox();\n  };\n\n  FormWizard.prototype.initEventListener = function () {\n    this._validationScript.addEventListener("keyup", this.evaluateValidationScript);\n\n    this._submitExtractForm.addEventListener("click", this.handleSaveExtractForm);\n\n    this._assertComparisionText.addEventListener("keyup", this.evaluteAssertText);\n\n    this._submitAssertForm.addEventListener("click", this.handleSaveAssertForm);\n  };\n\n  FormWizard.prototype.evaluteAssertText = function () {\n    var targetElement = this.recordingOverlay.getState().targetElement;\n\n    if (targetElement && targetElement.innerText === this._assertComparisionText.value) {\n      this._assertValidation.value = "TRUE";\n    } else {\n      this._assertValidation.value = "FALSE";\n    }\n  };\n\n  FormWizard.prototype.resetExtractFields = function () {\n    this._extractVariableName.value = "";\n    this._validationScript.value = constants_1.DEFAULT_VALIDATION_SCRIPT;\n    this._extractedInfoPreview.value = "";\n  };\n\n  FormWizard.prototype.initAssertFields = function () {\n    var targetElement = this.recordingOverlay.getState().targetElement;\n    this._assertComparisionText.value = targetElement.innerText;\n  };\n\n  FormWizard.prototype.renderForm = function () {\n    switch (this.actionType) {\n      case DOMEventsToRecord_1.EXTRACT_INFO:\n        this.resetExtractFields();\n        this._modalHeading.innerHTML = "Extract Info Form";\n\n        this._extract_event_form.removeAttribute("data-gone");\n\n        this.evaluateValidationScript();\n        break;\n\n      case DOMEventsToRecord_1.ASSERT_TEXT:\n        this.initAssertFields();\n        this._modalHeading.innerHTML = "Assert Text";\n\n        this._assertEventForm.removeAttribute("data-gone");\n\n        this.evaluteAssertText();\n        break;\n    }\n  };\n\n  FormWizard.prototype.boot = function (actionType) {\n    console.debug("Form wizard booted up");\n    this.initNodes();\n    this.initEventListener();\n    this.actionType = actionType;\n    dom_1.setAttributeForAllChildNodes(this._modalContentContainer, "data-gone", "true");\n    this.renderForm();\n  };\n\n  return FormWizard;\n}();\n\nexports["default"] = FormWizard;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///22\n')},,,,,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"createPopper\", function() { return /* binding */ popper_createPopper; });\n__webpack_require__.d(__webpack_exports__, \"popperGenerator\", function() { return /* reexport */ popperGenerator; });\n__webpack_require__.d(__webpack_exports__, \"defaultModifiers\", function() { return /* binding */ popper_defaultModifiers; });\n__webpack_require__.d(__webpack_exports__, \"detectOverflow\", function() { return /* reexport */ detectOverflow; });\n\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js\nfunction getBoundingClientRect(element) {\n  var rect = element.getBoundingClientRect();\n  return {\n    width: rect.width,\n    height: rect.height,\n    top: rect.top,\n    right: rect.right,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    y: rect.top\n  };\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindow.js\n/*:: import type { Window } from '../types'; */\n\n/*:: declare function getWindow(node: Node | Window): Window; */\nfunction getWindow(node) {\n  if (node.toString() !== '[object Window]') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView : window;\n  }\n\n  return node;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js\n\nfunction getWindowScroll(node) {\n  var win = getWindow(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js\n\n/*:: declare function isElement(node: mixed): boolean %checks(node instanceof\n  Element); */\n\nfunction isElement(node) {\n  var OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n/*:: declare function isHTMLElement(node: mixed): boolean %checks(node instanceof\n  HTMLElement); */\n\n\nfunction isHTMLElement(node) {\n  var OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\n\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js\nfunction getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js\n\n\n\n\nfunction getNodeScroll(node) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js\nfunction getNodeName(element) {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js\n\nfunction getDocumentElement(element) {\n  // $FlowFixMe: assume body is always available\n  return (isElement(element) ? element.ownerDocument : element.document).documentElement;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js\n\n\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js\n\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js\n\nfunction isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = getComputedStyle(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js\n\n\n\n\n\n\n // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\nfunction getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (!isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js\n// Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\nfunction getLayoutRect(element) {\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: element.offsetWidth,\n    height: element.offsetHeight\n  };\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js\n\n\nfunction getParentNode(element) {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (// $FlowFixMe: this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || // DOM Element detected\n    // $FlowFixMe: need a better way to handle this...\n    element.host || // ShadowRoot detected\n    // $FlowFixMe: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js\n\n\n\n\nfunction getScrollParent(node) {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js\n\n\n\n\n\nfunction listScrollParents(element, list) {\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = getScrollParent(element);\n  var isBody = getNodeName(scrollParent) === 'body';\n  var win = getWindow(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents(getParentNode(target)));\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js\n\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js\n\n\n\n\n\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n}\n\nfunction getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element); // Find the nearest non-table offsetParent\n\n  while (offsetParent && isTableElement(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static') {\n    return window;\n  }\n\n  return offsetParent || window;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/enums.js\nvar enums_top = 'top';\nvar bottom = 'bottom';\nvar right = 'right';\nvar left = 'left';\nvar auto = 'auto';\nvar basePlacements = [enums_top, bottom, right, left];\nvar start = 'start';\nvar end = 'end';\nvar enums_clippingParents = 'clippingParents';\nvar viewport = 'viewport';\nvar enums_popper = 'popper';\nvar enums_reference = 'reference';\nvar variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nvar enums_placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nvar beforeRead = 'beforeRead';\nvar read = 'read';\nvar afterRead = 'afterRead'; // pure-logic modifiers\n\nvar beforeMain = 'beforeMain';\nvar main = 'main';\nvar afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nvar beforeWrite = 'beforeWrite';\nvar write = 'write';\nvar afterWrite = 'afterWrite';\nvar modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/orderModifiers.js\n // source: https://stackoverflow.com/questions/49875255\n\nfunction order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nfunction orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = order(modifiers); // order based on phase\n\n  return modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/debounce.js\nfunction debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/mergeByName.js\nfunction mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign({}, existing, {}, current, {\n      options: Object.assign({}, existing.options, {}, current.options),\n      data: Object.assign({}, existing.data, {}, current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';\nvar INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';\nvar DEFAULT_OPTIONS = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === 'function');\n  });\n}\n\nfunction popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: Object.assign({}, DEFAULT_OPTIONS, {}, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(options) {\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, {}, state.options, {}, options);\n        state.scrollParents = {\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n          popper: listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        }); // Validate the provided modifiers so that the consumer will get warned\n        // if one of the modifiers is invalid for any reason\n\n        if (false) { var _getComputedStyle, marginTop, marginRight, marginBottom, marginLeft, flipModifier, modifiers; }\n\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          if (false) {}\n\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\n          popper: getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n        var __debug_loops__ = 0;\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (false) {}\n\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === 'function') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      if (false) {}\n\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref3) {\n        var name = _ref3.name,\n            _ref3$options = _ref3.options,\n            options = _ref3$options === void 0 ? {} : _ref3$options,\n            effect = _ref3.effect;\n\n        if (typeof effect === 'function') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\nvar lib_createPopper = /*#__PURE__*/popperGenerator();\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/eventListeners.js\n // eslint-disable-next-line import/no-unused-modules\n\nvar passive = {\n  passive: true\n};\n\nfunction effect(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ var eventListeners = ({\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: function fn() {},\n  effect: effect,\n  data: {}\n});\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getBasePlacement.js\n\nfunction getBasePlacement(placement) {\n  return placement.split('-')[0];\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getVariation.js\nfunction getVariation(placement) {\n  return placement.split('-')[1];\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/computeOffsets.js\n\n\n\n\nfunction computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case enums_top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = Math.floor(offsets[mainAxis]) - Math.floor(reference[len] / 2 - element[len] / 2);\n        break;\n\n      case end:\n        offsets[mainAxis] = Math.floor(offsets[mainAxis]) + Math.ceil(reference[len] / 2 - element[len] / 2);\n        break;\n\n      default:\n    }\n  }\n\n  return offsets;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js\n\n\nfunction popperOffsets_popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ var modifiers_popperOffsets = ({\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets_popperOffsets,\n  data: {}\n});\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/computeStyles.js\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nvar unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsets(_ref) {\n  var x = _ref.x,\n      y = _ref.y;\n  var win = window;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: Math.round(x * dpr) / dpr || 0,\n    y: Math.round(y * dpr) / dpr || 0\n  };\n}\n\nfunction mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive;\n\n  var _roundOffsets = roundOffsets(offsets),\n      x = _roundOffsets.x,\n      y = _roundOffsets.y;\n\n  var hasX = offsets.hasOwnProperty('x');\n  var hasY = offsets.hasOwnProperty('y');\n  var sideX = left;\n  var sideY = enums_top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = getOffsetParent(popper);\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n    } // $FlowFixMe: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n    /*:: offsetParent = (offsetParent: Element); */\n\n\n    if (placement === enums_top) {\n      sideY = bottom;\n      y -= offsetParent.clientHeight - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === left) {\n      sideX = right;\n      x -= offsetParent.clientWidth - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) < 2 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\n\nfunction computeStyles(_ref3) {\n  var state = _ref3.state,\n      options = _ref3.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive;\n\n  if (false) { var transitionProperty; }\n\n  var commonStyles = {\n    placement: getBasePlacement(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, {}, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, {}, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: 'absolute',\n      adaptive: false\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-placement': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ var modifiers_computeStyles = ({\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n});\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/applyStyles.js\n\n // This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    } // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction applyStyles_effect(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0'\n    },\n    arrow: {\n      position: 'absolute'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = '';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      } // Flow doesn't support to extend this property, but it's the most\n      // effective way to apply styles to an HTMLElement\n      // $FlowFixMe\n\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ var modifiers_applyStyles = ({\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect: applyStyles_effect,\n  requires: ['computeStyles']\n});\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/offset.js\n\n\nfunction distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, enums_top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset_offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = enums_placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ var modifiers_offset = ({\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset_offset\n});\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js\nvar hash = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js\nvar getOppositeVariationPlacement_hash = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return getOppositeVariationPlacement_hash[matched];\n  });\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js\n\nfunction getViewportRect(element) {\n  var win = getWindow(element);\n  var visualViewport = win.visualViewport;\n  var width = win.innerWidth;\n  var height = win.innerHeight; // We don't know which browsers have buggy or odd implementations of this, so\n  // for now we're only applying it to iOS to fix the keyboard issue.\n  // Investigation required\n\n  if (visualViewport && /iPhone|iPod|iPad/.test(navigator.platform)) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: 0,\n    y: 0\n  };\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js\n\n\n\n\nfunction getDocumentRect(element) {\n  var win = getWindow(element);\n  var winScroll = getWindowScroll(element);\n  var documentRect = getCompositeRect(getDocumentElement(element), win);\n  documentRect.height = Math.max(documentRect.height, win.innerHeight);\n  documentRect.width = Math.max(documentRect.width, win.innerWidth);\n  documentRect.x = -winScroll.scrollLeft;\n  documentRect.y = -winScroll.scrollTop;\n  return documentRect;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getBorders.js\n\n\n\nfunction toNumber(cssValue) {\n  return parseFloat(cssValue) || 0;\n}\n\nfunction getBorders(element) {\n  var computedStyle = isHTMLElement(element) ? getComputedStyle(element) : {};\n  return {\n    top: toNumber(computedStyle.borderTopWidth),\n    right: toNumber(computedStyle.borderRightWidth),\n    bottom: toNumber(computedStyle.borderBottomWidth),\n    left: toNumber(computedStyle.borderLeftWidth)\n  };\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getDecorations.js\n\n\n\n // Borders + scrollbars\n\nfunction getDecorations(element) {\n  var win = getWindow(element);\n  var borders = getBorders(element);\n  var isHTML = getNodeName(element) === 'html';\n  var winScrollBarX = getWindowScrollBarX(element);\n  var x = element.clientWidth + borders.right;\n  var y = element.clientHeight + borders.bottom; // HACK:\n  // document.documentElement.clientHeight on iOS reports the height of the\n  // viewport including the bottom bar, even if the bottom bar isn't visible.\n  // If the difference between window innerHeight and html clientHeight is more\n  // than 50, we assume it's a mobile bottom bar and ignore scrollbars.\n  // * A 50px thick scrollbar is likely non-existent (macOS is 15px and Windows\n  //   is about 17px)\n  // * The mobile bar is 114px tall\n\n  if (isHTML && win.innerHeight - element.clientHeight > 50) {\n    y = win.innerHeight - borders.bottom;\n  }\n\n  return {\n    top: isHTML ? 0 : element.clientTop,\n    right: // RTL scrollbar (scrolling containers only)\n    element.clientLeft > borders.left ? borders.right : // LTR scrollbar\n    isHTML ? win.innerWidth - x - winScrollBarX : element.offsetWidth - x,\n    bottom: isHTML ? win.innerHeight - y : element.offsetHeight - y,\n    left: isHTML ? winScrollBarX : element.clientLeft\n  };\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/contains.js\nfunction contains(parent, child) {\n  // $FlowFixMe: hasOwnProperty doesn't seem to work in tests\n  var isShadow = Boolean(child.getRootNode && child.getRootNode().host); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (isShadow) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/rectToClientRect.js\nfunction rectToClientRect(rect) {\n  return Object.assign({}, rect, {\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction getClientRectFromMixedType(element, clippingParent) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isHTMLElement(clippingParent) ? getBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(element);\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement);\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nfunction getClippingRect(element, boundary, rootBoundary) {\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent);\n    var decorations = getDecorations(isHTMLElement(clippingParent) ? clippingParent : getDocumentElement(element));\n    accRect.top = Math.max(rect.top + decorations.top, accRect.top);\n    accRect.right = Math.min(rect.right - decorations.right, accRect.right);\n    accRect.bottom = Math.min(rect.bottom - decorations.bottom, accRect.bottom);\n    accRect.left = Math.max(rect.left + decorations.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js\nfunction getFreshSideObject() {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js\n\nfunction mergePaddingObject(paddingObject) {\n  return Object.assign({}, getFreshSideObject(), {}, paddingObject);\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/expandToHashMap.js\nfunction expandToHashMap(value, keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/detectOverflow.js\n\n\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nfunction detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? enums_clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? enums_popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === enums_popper ? enums_reference : enums_popper;\n  var referenceElement = state.elements.reference;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);\n  var referenceClientRect = getBoundingClientRect(referenceElement);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, {}, popperOffsets));\n  var elementClientRect = elementContext === enums_popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === enums_popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [enums_top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js\n\n\n\n\n\n/*:: type OverflowsMap = { [ComputedPlacement]: number }; */\n\n/*;; type OverflowsMap = { [key in ComputedPlacement]: number }; */\nfunction computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? enums_placements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements = (variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements).filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  }); // $FlowFixMe: Flow seems to have problems with two array unions...\n\n  var overflows = placements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/flip.js\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = getBasePlacement(placement);\n\n    var isStartVariation = getVariation(placement) === start;\n    var isVertical = [enums_top, bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : enums_top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === \"break\") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ var modifiers_flip = ({\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n});\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getAltAxis.js\nfunction getAltAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/within.js\nfunction within(min, value, max) {\n  return Math.max(min, Math.min(value, max));\n}\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js\n\n\n\n\n\n\n\n\n\n\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis) {\n    var mainSide = mainAxis === 'y' ? enums_top : left;\n    var altSide = mainAxis === 'y' ? bottom : right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min = popperOffsets[mainAxis] + overflow[mainSide];\n    var max = popperOffsets[mainAxis] - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;\n    var tetherMin = popperOffsets[mainAxis] + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = popperOffsets[mainAxis] + maxOffset - offsetModifierValue;\n    var preventedOffset = within(tether ? Math.min(min, tetherMin) : min, offset, tether ? Math.max(max, tetherMax) : max);\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n\n  if (checkAltAxis) {\n    var _mainSide = mainAxis === 'x' ? enums_top : left;\n\n    var _altSide = mainAxis === 'x' ? bottom : right;\n\n    var _offset = popperOffsets[altAxis];\n\n    var _min = _offset + overflow[_mainSide];\n\n    var _max = _offset - overflow[_altSide];\n\n    var _preventedOffset = within(_min, _offset, _max);\n\n    popperOffsets[altAxis] = _preventedOffset;\n    data[altAxis] = _preventedOffset - _offset;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ var modifiers_preventOverflow = ({\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n});\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/arrow.js\n\n\n\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = state.modifiersData[name + \"#persistent\"].padding;\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === 'y' ? enums_top : left;\n  var maxProp = axis === 'y' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction arrow_effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element,\n      _options$padding = options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (false) {}\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    if (false) {}\n\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n  state.modifiersData[name + \"#persistent\"] = {\n    padding: mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements))\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ var modifiers_arrow = ({\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: arrow_effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n});\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/hide.js\n\n\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [enums_top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ var modifiers_hide = ({\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n});\n// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/popper.js\n\n\n\n\n\n\n\n\n\n\n\nvar popper_defaultModifiers = [eventListeners, modifiers_popperOffsets, modifiers_computeStyles, modifiers_applyStyles, modifiers_offset, modifiers_flip, modifiers_preventOverflow, modifiers_arrow, modifiers_hide];\nvar popper_createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: popper_defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///29\n")}]);